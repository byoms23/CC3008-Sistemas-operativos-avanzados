Conexion con: ('127.0.0.1', 57952)
Solicitud: GET / HTTP/1.1
User-Agent: Opera/9.80 (X11; Linux i686; U; en) Presto/2.6.30 Version/10.60
Host: 1
Conexion con: ('127.0.0.1', 57953)
Solicitud: GET /favicon.ico HTTP/1.1
User-Agent: Opera/9.80 (X11; Linux i686; U; en) Presto/2.6.30 Version/10.
Conexion con: ('127.0.0.1', 57957)
Solicitud: GET / HTTP/1.1
User-Agent: Opera/9.80 (X11; Linux i686; U; en) Presto/2.6.30 Version/10.60
Host: 1
Conexion con: ('127.0.0.1', 57958)
Solicitud: GET /favicon.ico HTTP/1.1
User-Agent: Opera/9.80 (X11; Linux i686; U; en) Presto/2.6.30 Version/10.
Conexion con: ('127.0.0.1', 57959)
Solicitud: GET / HTTP/1.1
User-Agent: Opera/9.80 (X11; Linux i686; U; en) Presto/2.6.30 Version/10.60
Host: 1
Conexion con: ('127.0.0.1', 57960)
Solicitud: GET /favicon.ico HTTP/1.1
User-Agent: Opera/9.80 (X11; Linux i686; U; en) Presto/2.6.30 Version/10.
Conexion con: ('127.0.0.1', 57961)
Solicitud: GET / HTTP/1.1
User-Agent: Opera/9.80 (X11; Linux i686; U; en) Presto/2.6.30 Version/10.60
Host: 1
Conexion con: ('127.0.0.1', 57962)
Solicitud: GET /favicon.ico HTTP/1.1
User-Agent: Opera/9.80 (X11; Linux i686; U; en) Presto/2.6.30 Version/10.
Conexion con: ('127.0.0.1', 57963)
Solicitud: GET / HTTP/1.1
User-Agent: Opera/9.80 (X11; Linux i686; U; en) Presto/2.6.30 Version/10.60
Host: 1
Conexion con: ('127.0.0.1', 57964)
Solicitud: GET /favicon.ico HTTP/1.1
User-Agent: Opera/9.80 (X11; Linux i686; U; en) Presto/2.6.30 Version/10.
Conexion con: ('127.0.0.1', 57965)
Solicitud: GET / HTTP/1.1
User-Agent: Opera/9.80 (X11; Linux i686; U; en) Presto/2.6.30 Version/10.60
Host: 1
Conexion con: ('127.0.0.1', 57966)
Solicitud: GET /favicon.ico HTTP/1.1
User-Agent: Opera/9.80 (X11; Linux i686; U; en) Presto/2.6.30 Version/10.
Conexion con: ('127.0.0.1', 57967)
Solicitud: GET / HTTP/1.1
User-Agent: Opera/9.80 (X11; Linux i686; U; en) Presto/2.6.30 Version/10.60
Host: 1
Conexion con: ('127.0.0.1', 57968)
Solicitud: GET /favicon.ico HTTP/1.1
User-Agent: Opera/9.80 (X11; Linux i686; U; en) Presto/2.6.30 Version/10.
Conexion con: ('127.0.0.1', 34186)
Solicitud: GET / HTTP/1.1
User-Agent: Opera/9.80 (X11; Linux i686; U; en) Presto/2.6.30 Version/10.60
Host: 1

Conexion con: ('127.0.0.1', 34187)
Solicitud: GET /favicon.ico HTTP/1.1
User-Agent: Opera/9.80 (X11; Linux i686; U; en) Presto/2.6.30 Version/10.

Conexion con: ('127.0.0.1', 34188)
Solicitud: GET / HTTP/1.1
User-Agent: Opera/9.80 (X11; Linux i686; U; en) Presto/2.6.30 Version/10.60
Host: 1

Conexion con: ('127.0.0.1', 34189)
Solicitud: GET /favicon.ico HTTP/1.1
User-Agent: Opera/9.80 (X11; Linux i686; U; en) Presto/2.6.30 Version/10.

Conexion con: ('127.0.0.1', 34190)
Solicitud: GET / HTTP/1.1
User-Agent: Opera/9.80 (X11; Linux i686; U; en) Presto/2.6.30 Version/10.60
Host: 1

Conexion con: ('127.0.0.1', 34191)
Solicitud: GET /favicon.ico HTTP/1.1
User-Agent: Opera/9.80 (X11; Linux i686; U; en) Presto/2.6.30 Version/10.

Conexion con: ('127.0.0.1', 34210)
Solicitud: GET / HTTP/1.1
User-Agent: Opera/9.80 (X11; Linux i686; U; en) Presto/2.6.30 Version/10.60
Host: 1

Conexion con: ('127.0.0.1', 34211)
Solicitud: GET /favicon.ico HTTP/1.1
User-Agent: Opera/9.80 (X11; Linux i686; U; en) Presto/2.6.30 Version/10.

Conexion con: ('127.0.0.1', 34212)
Solicitud: GET / HTTP/1.1
User-Agent: Opera/9.80 (X11; Linux i686; U; en) Presto/2.6.30 Version/10.60
Host: 1

Conexion con: ('127.0.0.1', 34213)
Solicitud: GET /favicon.ico HTTP/1.1
User-Agent: Opera/9.80 (X11; Linux i686; U; en) Presto/2.6.30 Version/10.

Conexion con: ('127.0.0.1', 34215)
Solicitud aceptada: GET / HTTP/1.1
User-Agent: Opera/9.80 (X11; Linux i686; U; en) Presto/2.6.30 Version/10.60
Host: 1

Conexion con: ('127.0.0.1', 34216)
Solicitud aceptada: GET /favicon.ico HTTP/1.1
User-Agent: Opera/9.80 (X11; Linux i686; U; en) Presto/2.6.30 Version/10.

Conexion con: ('127.0.0.1', 34217)
Solicitud aceptada: GET / HTTP/1.1
User-Agent: Opera/9.80 (X11; Linux i686; U; en) Presto/2.6.30 Version/10.60
Host: 1

Conexion con: ('127.0.0.1', 34218)
Solicitud aceptada: GET /favicon.ico HTTP/1.1
User-Agent: Opera/9.80 (X11; Linux i686; U; en) Presto/2.6.30 Version/10.

Conexion con: ('127.0.0.1', 34219)
Solicitud aceptada: GET / HTTP/1.1
User-Agent: Opera/9.80 (X11; Linux i686; U; en) Presto/2.6.30 Version/10.60
Host: 1

Conexion con: ('127.0.0.1', 34220)
Solicitud aceptada: GET /favicon.ico HTTP/1.1
User-Agent: Opera/9.80 (X11; Linux i686; U; en) Presto/2.6.30 Version/10.

Conexion con: ('127.0.0.1', 55176)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:2727
Connection: keep-alive
User-Agent: Mozilla/5.0 (X11; U; Linux

Conexion con: ('127.0.0.1', 55178)
Solicitud aceptada: GET /favicon.ico HTTP/1.1
Host: localhost:2727
Connection: keep-alive
User-Agent: Mozilla/5.0 (X1

Conexion con: ('127.0.0.1', 44984)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:2727
Connection: keep-alive
User-Agent: Mozilla/5.0 (X11; U; Linux

Conexion con: ('127.0.0.1', 44986)
Solicitud aceptada: GET /favicon.ico HTTP/1.1
Host: localhost:2727
Connection: keep-alive
User-Agent: Mozilla/5.0 (X1

Conexion con: ('127.0.0.1', 44988)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:2727
Connection: keep-alive
User-Agent: Mozilla/5.0 (X11; U; Linux

Conexion con: ('127.0.0.1', 44990)
Solicitud aceptada: GET /favicon.ico HTTP/1.1
Host: localhost:2727
Connection: keep-alive
User-Agent: Mozilla/5.0 (X1

Conexion con: ('127.0.0.1', 44992)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:2727
Connection: keep-alive
User-Agent: Mozilla/5.0 (X11; U; Linux

Conexion con: ('127.0.0.1', 44994)
Solicitud aceptada: GET /favicon.ico HTTP/1.1
Host: localhost:2727
Connection: keep-alive
User-Agent: Mozilla/5.0 (X1

Conexion con: ('127.0.0.1', 44996)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:2727
Connection: keep-alive
User-Agent: Mozilla/5.0 (X11; U; Linux

Conexion con: ('127.0.0.1', 44998)
Solicitud aceptada: GET /favicon.ico HTTP/1.1
Host: localhost:2727
Connection: keep-alive
User-Agent: Mozilla/5.0 (X1

Date: Sat, 25 Sep 2010 05:24:52 IP: URL requested:Conexion con: ('127.0.0.1', 43128)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:2727
Connection: keep-alive
User-Agent: Mozilla/5.0 (X11; U; Linux

Date: Sat, 25 Sep 2010 05:24:52 IP: URL requested:Conexion con: ('127.0.0.1', 43130)
Solicitud aceptada: GET /favicon.ico HTTP/1.1
Host: localhost:2727
Connection: keep-alive
User-Agent: Mozilla/5.0 (X1

Date: Sat, 25 Sep 2010 05:52:38 IP: URL requested:Conexion con: ('127.0.0.1', 51454)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:2727
Connection: keep-alive
User-Agent: Mozilla/5.0 (X11; U; Linux

Date: Sat, 25 Sep 2010 05:52:38 IP: URL requested:Conexion con: ('127.0.0.1', 51456)
Solicitud aceptada: GET /favicon.ico HTTP/1.1
Host: localhost:2727
Connection: keep-alive
User-Agent: Mozilla/5.0 (X1

Date: Sat, 25 Sep 2010 05:52:39 IP: URL requested:Conexion con: ('127.0.0.1', 51458)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:2727
Connection: keep-alive
User-Agent: Mozilla/5.0 (X11; U; Linux

Date: Sat, 25 Sep 2010 05:52:39 IP: URL requested:Conexion con: ('127.0.0.1', 51460)
Solicitud aceptada: GET /favicon.ico HTTP/1.1
Host: localhost:2727
Connection: keep-alive
User-Agent: Mozilla/5.0 (X1

Date: Sat, 25 Sep 2010 05:52:39 IP: URL requested:Conexion con: ('127.0.0.1', 51462)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:2727
Connection: keep-alive
User-Agent: Mozilla/5.0 (X11; U; Linux

Date: Sat, 25 Sep 2010 05:52:39 IP: URL requested:Conexion con: ('127.0.0.1', 51464)
Solicitud aceptada: GET /favicon.ico HTTP/1.1
Host: localhost:2727
Connection: keep-alive
User-Agent: Mozilla/5.0 (X1

Date: Sat, 25 Sep 2010 05:52:39 IP: URL requested:Conexion con: ('127.0.0.1', 51466)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:2727
Connection: keep-alive
User-Agent: Mozilla/5.0 (X11; U; Linux

Date: Sat, 25 Sep 2010 05:52:39 IP: URL requested:Conexion con: ('127.0.0.1', 51468)
Solicitud aceptada: GET /favicon.ico HTTP/1.1
Host: localhost:2727
Connection: keep-alive
User-Agent: Mozilla/5.0 (X1

Date: Sat, 25 Sep 2010 05:52:39 IP: URL requested:Conexion con: ('127.0.0.1', 51470)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:2727
Connection: keep-alive
User-Agent: Mozilla/5.0 (X11; U; Linux

Date: Sat, 25 Sep 2010 05:52:39 IP: URL requested:Conexion con: ('127.0.0.1', 51472)
Solicitud aceptada: GET /favicon.ico HTTP/1.1
Host: localhost:2727
Connection: keep-alive
User-Agent: Mozilla/5.0 (X1

Date: Sat, 25 Sep 2010 21:38:48 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 40244)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (X11; U; Linux

Date: Sat, 25 Sep 2010 21:38:48 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 40246)
Solicitud aceptada: GET /favicon.ico HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (X1

Date: Sat, 25 Sep 2010 21:38:52 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 40248)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (X11; U; Linux

Date: Sat, 25 Sep 2010 21:38:52 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 40250)
Solicitud aceptada: GET /favicon.ico HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (X1

Date: Sat, 25 Sep 2010 21:38:52 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 40252)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (X11; U; Linux

Date: Sat, 25 Sep 2010 21:38:52 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 40255)
Solicitud aceptada: GET /favicon.ico HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (X1

Date: Sat, 25 Sep 2010 21:38:52 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 40256)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (X11; U; Linux

Date: Sat, 25 Sep 2010 21:38:52 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 40258)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (X11; U; Linux

Date: Sat, 25 Sep 2010 21:38:52 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 40260)
Solicitud aceptada: GET /favicon.ico HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (X1

Date: Sat, 25 Sep 2010 21:38:52 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 40262)
Solicitud aceptada: GET /favicon.ico HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (X1

Date: Sat, 25 Sep 2010 21:38:52 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 40264)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (X11; U; Linux

Date: Sat, 25 Sep 2010 21:38:52 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 40266)
Solicitud aceptada: GET /favicon.ico HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (X1

Date: Sat, 25 Sep 2010 22:10:25 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 60686)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (X11; U; Linux

Date: Sat, 25 Sep 2010 22:10:25 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 60688)
Solicitud aceptada: GET /favicon.ico HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (X1

Date: Sat, 25 Sep 2010 22:11:18 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 60690)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (X11; U; Linux

Date: Sat, 25 Sep 2010 22:11:18 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 60692)
Solicitud aceptada: GET /favicon.ico HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (X1

Date: Sat, 25 Sep 2010 22:11:20 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 60694)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (X11; U; Linux

Date: Sat, 25 Sep 2010 22:11:20 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 60696)
Solicitud aceptada: GET /favicon.ico HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (X1

Date: Sat, 25 Sep 2010 22:11:20 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 60698)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (X11; U; Linux

Date: Sat, 25 Sep 2010 22:11:20 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 60700)
Solicitud aceptada: GET /favicon.ico HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (X1

Date: Sat, 25 Sep 2010 22:11:20 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 60702)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (X11; U; Linux

Date: Sat, 25 Sep 2010 22:11:20 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 60704)
Solicitud aceptada: GET /favicon.ico HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (X1

Date: Sat, 25 Sep 2010 22:11:20 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 60706)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (X11; U; Linux

Date: Sat, 25 Sep 2010 22:11:20 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 60708)
Solicitud aceptada: GET /favicon.ico HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (X1

Date: Sat, 25 Sep 2010 22:11:23 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 60710)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (X11; U; Linux

Date: Sat, 25 Sep 2010 22:11:23 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 60712)
Solicitud aceptada: GET /favicon.ico HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (X1

Date: Sat, 25 Sep 2010 22:11:38 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 60714)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (X11; U; Linux

Date: Sat, 25 Sep 2010 22:11:38 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 60716)
Solicitud aceptada: GET /favicon.ico HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (X1

Date: Sat, 25 Sep 2010 22:12:10 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 60718)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (X11; U; Linux

Date: Sat, 25 Sep 2010 22:12:10 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 60720)
Solicitud aceptada: GET /favicon.ico HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (X1

Date: Sat, 25 Sep 2010 22:12:18 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 60722)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (X11; U; Linux

Date: Sat, 25 Sep 2010 22:12:18 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 60724)
Solicitud aceptada: GET /favicon.ico HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (X1

Date: Sat, 25 Sep 2010 22:12:18 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 60726)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (X11; U; Linux

Date: Sat, 25 Sep 2010 22:12:18 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 60728)
Solicitud aceptada: GET /favicon.ico HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (X1

Date: Sat, 25 Sep 2010 22:13:21 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 60730)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sat, 25 Sep 2010 22:13:21 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 60732)
Solicitud aceptada: GET /favicon.ico HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR;

Date: Sat, 25 Sep 2010 22:13:24 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 60734)
Solicitud aceptada: GET /favicon.ico HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR;

Date: Sat, 25 Sep 2010 22:13:29 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 60736)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sat, 25 Sep 2010 22:13:49 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 47224)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sat, 25 Sep 2010 22:13:54 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 47226)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (X11; U; Linux

Date: Sat, 25 Sep 2010 22:13:54 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 47228)
Solicitud aceptada: GET /favicon.ico HTTP/1.1
Host: localhost:8080
Connection: keep-alive
User-Agent: Mozilla/5.0 (X1

Date: Sun, 26 Sep 2010 23:24:42 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51608)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:43 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51610)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:44 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51612)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:44 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51614)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:44 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51616)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:44 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51618)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:44 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51620)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:44 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51622)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:44 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51624)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:44 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51626)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:44 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51628)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:44 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51630)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:44 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51632)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:44 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51634)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:45 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51636)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:45 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51638)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:45 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51640)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:45 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51652)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:45 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51642)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:45 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51654)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:45 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51644)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:45 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51656)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:45 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51658)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:45 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51660)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:45 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51662)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:45 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51664)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:45 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51666)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:45 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51668)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:45 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51670)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:45 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51672)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:45 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51674)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:45 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51676)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:45 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51678)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:45 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51680)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:45 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51682)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:45 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51684)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:45 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51686)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:45 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51688)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:45 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51690)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:45 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51692)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:45 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51694)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:46 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51696)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:46 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51698)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:46 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51700)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:46 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51702)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:46 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51704)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:46 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51706)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:46 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51708)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:46 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51710)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:46 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51712)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:46 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51714)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:46 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51716)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:46 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51718)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:46 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51720)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:24:46 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 51722)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Sun, 26 Sep 2010 23:37:41 
IP: 127.0.0.1
URL requested:

Conexion con: ('127.0.0.1', 53455)
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Mon, 27 Sep 2010 00:44:21 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Mon, 27 Sep 2010 00:44:22 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Mon, 27 Sep 2010 00:47:59 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Mon, 27 Sep 2010 04:26:55 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Mon, 27 Sep 2010 04:46:49 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Mon, 27 Sep 2010 04:53:54 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 04:53:54 
Content-Type: text/html
Content-Length: 0


"""
Transfered bytes: 132
Date: Mon, 27 Sep 2010 04:58:00 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 04:58:00 
Content-Type: text/html
Content-Length: 0


"""
Transfered bytes: 132
From .
Executed in thread '<bound method Hilo.getName of <Hilo(Hilo (1), started -1216205968)>>'.
Date: Mon, 27 Sep 2010 04:58:02 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 04:58:02 
Content-Type: text/html
Content-Length: 0


"""
Transfered bytes: 132
From .
Executed in thread '<bound method Hilo.getName of <Hilo(Hilo (2), started -1224598672)>>'.
Date: Mon, 27 Sep 2010 04:58:02 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 04:58:02 
Content-Type: text/html
Content-Length: 0


"""
Transfered bytes: 132
From .
Executed in thread '<bound method Hilo.getName of <Hilo(Hilo (3), started -1232991376)>>'.
Date: Mon, 27 Sep 2010 04:58:03 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 04:58:03 
Content-Type: text/html
Content-Length: 0


"""
Transfered bytes: 132
From .
Executed in thread '<bound method Hilo.getName of <Hilo(Hilo (4), started -1241384080)>>'.
Date: Mon, 27 Sep 2010 04:58:03 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 04:58:03 
Content-Type: text/html
Content-Length: 0


"""
Transfered bytes: 132
From .
Executed in thread '<bound method Hilo.getName of <Hilo(Hilo (5), started -1249776784)>>'.
Date: Mon, 27 Sep 2010 04:58:03 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 04:58:03 
Content-Type: text/html
Content-Length: 0


"""
Transfered bytes: 132
From .
Executed in thread '<bound method Hilo.getName of <Hilo(Hilo (6), started -1258169488)>>'.
Date: Mon, 27 Sep 2010 04:58:03 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 04:58:03 
Content-Type: text/html
Content-Length: 0


"""
Transfered bytes: 132
From .
Executed in thread '<bound method Hilo.getName of <Hilo(Hilo (7), started -1266562192)>>'.
Date: Mon, 27 Sep 2010 04:58:03 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 04:58:03 
Content-Type: text/html
Content-Length: 0


"""
Transfered bytes: 132
From .
Executed in thread '<bound method Hilo.getName of <Hilo(Hilo (8), started -1274954896)>>'.
Date: Mon, 27 Sep 2010 04:58:03 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 04:58:03 
Content-Type: text/html
Content-Length: 0


"""
Transfered bytes: 132
From .
Executed in thread '<bound method Hilo.getName of <Hilo(Hilo (9), started -1283347600)>>'.
Date: Mon, 27 Sep 2010 04:58:03 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 04:58:03 
Content-Type: text/html
Content-Length: 0


"""
Transfered bytes: 132
From .
Executed in thread '<bound method Hilo.getName of <Hilo(Hilo (10), started -1291740304)>>'.
Date: Mon, 27 Sep 2010 04:58:03 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 04:58:03 
Content-Type: text/html
Content-Length: 0


"""
Transfered bytes: 132
From .
Executed in thread '<bound method Hilo.getName of <Hilo(Hilo (1), started -1216205968)>>'.
Date: Mon, 27 Sep 2010 04:58:03 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 04:58:03 
Content-Type: text/html
Content-Length: 0


"""
Transfered bytes: 132
From .
Executed in thread '<bound method Hilo.getName of <Hilo(Hilo (2), started -1224598672)>>'.
Date: Mon, 27 Sep 2010 04:58:03 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 04:58:03 
Content-Type: text/html
Content-Length: 0


"""
Transfered bytes: 132
From .
Executed in thread '<bound method Hilo.getName of <Hilo(Hilo (3), started -1232991376)>>'.
Date: Mon, 27 Sep 2010 04:58:03 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 04:58:03 
Content-Type: text/html
Content-Length: 0


"""
Transfered bytes: 132
From .
Executed in thread '<bound method Hilo.getName of <Hilo(Hilo (4), started -1241384080)>>'.
Date: Mon, 27 Sep 2010 04:58:03 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 04:58:03 
Content-Type: text/html
Content-Length: 0


"""
Transfered bytes: 132
From .
Executed in thread '<bound method Hilo.getName of <Hilo(Hilo (5), started -1249776784)>>'.
Date: Mon, 27 Sep 2010 04:58:03 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 04:58:03 
Content-Type: text/html
Content-Length: 0


"""
Transfered bytes: 132
From .
Executed in thread '<bound method Hilo.getName of <Hilo(Hilo (6), started -1258169488)>>'.
Date: Mon, 27 Sep 2010 04:58:03 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 04:58:03 
Content-Type: text/html
Content-Length: 0


"""
Transfered bytes: 132
From .
Executed in thread '<bound method Hilo.getName of <Hilo(Hilo (7), started -1266562192)>>'.
Date: Mon, 27 Sep 2010 04:58:03 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 04:58:03 
Content-Type: text/html
Content-Length: 0


"""
Transfered bytes: 132
From .
Executed in thread '<bound method Hilo.getName of <Hilo(Hilo (8), started -1274954896)>>'.
Date: Mon, 27 Sep 2010 04:58:03 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 04:58:03 
Content-Type: text/html
Content-Length: 0


"""
Transfered bytes: 132
From .
Executed in thread '<bound method Hilo.getName of <Hilo(Hilo (9), started -1283347600)>>'.
Date: Mon, 27 Sep 2010 04:58:03 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 04:58:03 
Content-Type: text/html
Content-Length: 0


"""
Transfered bytes: 132
From .
Executed in thread '<bound method Hilo.getName of <Hilo(Hilo (10), started -1291740304)>>'.
Date: Mon, 27 Sep 2010 04:58:04 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 04:58:04 
Content-Type: text/html
Content-Length: 0


"""
Transfered bytes: 132
From .
Executed in thread '<bound method Hilo.getName of <Hilo(Hilo (1), started -1216205968)>>'.
Date: Mon, 27 Sep 2010 04:58:04 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 04:58:04 
Content-Type: text/html
Content-Length: 0


"""
Transfered bytes: 132
From .
Executed in thread '<bound method Hilo.getName of <Hilo(Hilo (2), started -1224598672)>>'.
Date: Mon, 27 Sep 2010 04:58:04 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 04:58:04 
Content-Type: text/html
Content-Length: 0


"""
Transfered bytes: 132
From .
Executed in thread '<bound method Hilo.getName of <Hilo(Hilo (3), started -1232991376)>>'.
Date: Mon, 27 Sep 2010 04:58:04 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 04:58:04 
Content-Type: text/html
Content-Length: 0


"""
Transfered bytes: 132
From .
Executed in thread '<bound method Hilo.getName of <Hilo(Hilo (4), started -1241384080)>>'.
Date: Mon, 27 Sep 2010 04:58:04 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 04:58:04 
Content-Type: text/html
Content-Length: 0


"""
Transfered bytes: 132
From .
Executed in thread '<bound method Hilo.getName of <Hilo(Hilo (5), started -1249776784)>>'.
Date: Mon, 27 Sep 2010 05:04:26 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 05:04:26 
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 246
From disk.
Executed in thread '<bound method Hilo.getName of <Hilo(Hilo (6), started -1258169488)>>'.
Date: Mon, 27 Sep 2010 05:05:42 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Mon, 27 Sep 2010 05:06:25 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Mon, 27 Sep 2010 05:06:32 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Mon, 27 Sep 2010 05:06:34 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Mon, 27 Sep 2010 05:06:47 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 05:06:47 
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 246
From disk.
Executed in thread 'Hilo (1)'.
Date: Mon, 27 Sep 2010 05:06:49 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

Date: Mon, 27 Sep 2010 05:07:49 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 05:07:49 
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 246
From disk.
Executed in thread 'Hilo (1)'.
Date: Mon, 27 Sep 2010 05:07:56 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 05:07:56 
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 246
From cache.
Executed in thread 'Hilo (2)'.
Date: Mon, 27 Sep 2010 05:09:20 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 05:09:20 
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 246
From cache.
Executed in thread 'Hilo (3)'.
Date: Mon, 27 Sep 2010 05:09:23 
IP: 127.0.0.1
Solicitud aceptada: GET / HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.1.7

URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 05:09:23 
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 246
From cache.
Executed in thread 'Hilo (4)'.
Date: Mon, 27 Sep 2010 05:09:46 
IP: 127.0.0.1
Solicitud aceptada: GET /html/rfc2616-sec1.html HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i

URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 05:09:46 
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 246
From cache.
Executed in thread 'Hilo (5)'.
Date: Mon, 27 Sep 2010 05:09:51 
IP: 127.0.0.1
Solicitud aceptada: GET /html/rfc2616-sec1.html HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i

URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 05:09:51 
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 246
From cache.
Executed in thread 'Hilo (6)'.
Date: Mon, 27 Sep 2010 05:18:14 
IP: 127.0.0.1
Solicitud aceptada: GET /html/rfc2616-sec1.html HTTP/1.1
Host: localhost:8080
User-Agent: Mozilla/5.0 (X11; U; Linux i

URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 05:18:14 
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 246
From cache.
Executed in thread 'Hilo (7)'.
Date: Mon, 27 Sep 2010 05:26:51 
IP: 127.0.0.1
URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 05:26:51 
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 246
From disk.
Executed in thread 'Hilo (1)'.

Date: Mon, 27 Sep 2010 05:27:40 
IP: 127.0.0.1
URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 05:27:40 
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 246
From cache.
Executed in thread 'Hilo (2)'.

Date: Mon, 27 Sep 2010 05:28:33 
IP: 127.0.0.1
URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 05:28:33 
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 246
From cache.
Executed in thread 'Hilo (3)'.

Date: Mon, 27 Sep 2010 05:46:11 
IP: 127.0.0.1
URL requested:html/rfc2616-sec1.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 05:46:11 
Content-Type: text/html
Content-Length: 0


"""
Transfered bytes: 132
From .
Executed in thread 'Hilo (1)'.

Date: Mon, 27 Sep 2010 05:48:57 
IP: 127.0.0.1
URL requested:html/rfc2616-sec1.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 05:48:57 
Content-Type: text/html
Content-Length: 0


"""
Transfered bytes: 132
From .
Executed in thread 'Hilo (1)'.

Date: Mon, 27 Sep 2010 05:49:14 
IP: 127.0.0.1
URL requested:html/rfc2616-sec1.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 05:49:14 
Content-Type: text/html
Content-Length: 0


"""
Transfered bytes: 132
From .
Executed in thread 'Hilo (2)'.

Date: Mon, 27 Sep 2010 05:49:29 
IP: 127.0.0.1
URL requested:html/rfc2616-s%20%20ec1.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 05:49:29 
Content-Type: text/html
Content-Length: 0


"""
Transfered bytes: 132
From .
Executed in thread 'Hilo (3)'.

Date: Mon, 27 Sep 2010 06:00:30 
IP: 127.0.0.1
URL requested:html/rfc2616-s%20%20ec1.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 06:00:30 
Content-Type: text/html
Content-Length: 0


"""
Transfered bytes: 132
From .
Executed in thread 'Hilo (4)'.

Date: Mon, 27 Sep 2010 06:39:01 
IP: 127.0.0.1
Date: Mon, 27 Sep 2010 06:39:52 
IP: 127.0.0.1
Date: Mon, 27 Sep 2010 06:40:40 
IP: 127.0.0.1
URL requested:html/rfc2616-s%20%20ec1.html
Sended code: """HTTP/1.1 404
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 06:40:40 
"""
Transfered bytes: 85
From .
Executed in thread 'Hilo (1)'.

Date: Mon, 27 Sep 2010 06:41:01 
IP: 127.0.0.1
URL requested:html/rfc2616-s%20%20ec1.html
Sended code: """HTTP/1.1 404
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 06:41:01 
"""
Transfered bytes: 85
From .
Executed in thread 'Hilo (2)'.

Date: Mon, 27 Sep 2010 06:41:10 
IP: 127.0.0.1
URL requested:html/rfc2616-s%20%20ec1.html
Sended code: """HTTP/1.1 404
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 06:41:10 
"""
Transfered bytes: 85
From .
Executed in thread 'Hilo (3)'.

Date: Mon, 27 Sep 2010 06:41:11 
IP: 127.0.0.1
URL requested:html/rfc2616-s%20%20ec1.html
Sended code: """HTTP/1.1 404
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 06:41:11 
"""
Transfered bytes: 85
From .
Executed in thread 'Hilo (4)'.

Date: Mon, 27 Sep 2010 06:41:12 
IP: 127.0.0.1
URL requested:html/rfc2616-s%20%20ec1.html
Sended code: """HTTP/1.1 404
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 06:41:12 
"""
Transfered bytes: 85
From .
Executed in thread 'Hilo (5)'.

Date: Mon, 27 Sep 2010 06:41:12 
IP: 127.0.0.1
URL requested:html/rfc2616-s%20%20ec1.html
Sended code: """HTTP/1.1 404
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 06:41:12 
"""
Transfered bytes: 85
From .
Executed in thread 'Hilo (6)'.

Date: Mon, 27 Sep 2010 06:41:12 
IP: 127.0.0.1
URL requested:html/rfc2616-s%20%20ec1.html
Sended code: """HTTP/1.1 404
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 06:41:12 
"""
Transfered bytes: 85
From .
Executed in thread 'Hilo (7)'.

Date: Mon, 27 Sep 2010 06:41:12 
IP: 127.0.0.1
URL requested:html/rfc2616-s%20%20ec1.html
Sended code: """HTTP/1.1 404
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 06:41:12 
"""
Transfered bytes: 85
From .
Executed in thread 'Hilo (8)'.

Date: Mon, 27 Sep 2010 06:42:10 
IP: 127.0.0.1
Date: Mon, 27 Sep 2010 06:42:54 
IP: 127.0.0.1
Date: Mon, 27 Sep 2010 06:44:06 
IP: 127.0.0.1
URL requested:html/rfc2616-sec1.html
Sended code: """HTTP/1.1 
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 06:44:06 
Content-Type: text/html
Content-Length: 18112

<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head>
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">

<title>HTTP/1.1: Introduction</title></head><body><address>part of <a rev="Section" href="http://www.w3.org/Protocols/rfc2616/rfc2616.html">Hypertext Transfer Protocol -- HTTP/1.1</a><br>
RFC 2616 Fielding, et al.</address>
<h2><a id="sec1">1</a> Introduction</h2>
<h3><a id="sec1.1">1.1</a> Purpose</h3>
<p>
   The Hypertext Transfer Protocol (HTTP) is an application-level
   protocol for distributed, collaborative, hypermedia information
   systems. HTTP has been in use by the World-Wide Web global
   information initiative since 1990. The first version of HTTP,
   referred to as HTTP/0.9, was a simple protocol for raw data transfer
   across the Internet. HTTP/1.0, as defined by RFC 1945 <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib6">[6]</a>, improved
   the protocol by allowing messages to be in the format of MIME-like
   messages, containing metainformation about the data transferred and
   modifiers on the request/response semantics. However, HTTP/1.0 does
   not sufficiently take into consideration the effects of hierarchical
   proxies, caching, the need for persistent connections, or virtual
   hosts. In addition, the proliferation of incompletely-implemented
   applications calling themselves "HTTP/1.0" has necessitated a
   protocol version change in order for two communicating applications
   to determine each other's true capabilities.
</p>
<p>
   This specification defines the protocol referred to as "HTTP/1.1".
   This protocol includes more stringent requirements than HTTP/1.0 in
   order to ensure reliable implementation of its features.
</p>
<p>
   Practical information systems require more functionality than simple
   retrieval, including search, front-end update, and annotation. HTTP
   allows an open-ended set of methods and headers that indicate the
   purpose of a request <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib47">[47]</a>. It builds on the discipline of reference
   provided by the Uniform Resource Identifier (URI) <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib3">[3]</a>, as a location
   (URL) <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib4">[4]</a> or name (URN) <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib20">[20]</a>, for indicating the resource to which a
</p>
<p>
   method is to be applied. Messages are passed in a format similar to
   that used by Internet mail [9] as defined by the Multipurpose
   Internet Mail Extensions (MIME) <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib7">[7]</a>.
</p>
<p>
   HTTP is also used as a generic protocol for communication between
   user agents and proxies/gateways to other Internet systems, including
   those supported by the SMTP <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib16">[16]</a>, NNTP <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib13">[13]</a>, FTP <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib18">[18]</a>, Gopher <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib2">[2]</a>,
   and WAIS <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib10">[10]</a> protocols. In this way, HTTP allows basic hypermedia
   access to resources available from diverse applications.
</p>
<h3><a id="sec1.2">1.2</a> Requirements</h3>
<p>
   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib34">[34]</a>.
</p>
<p>
   An implementation is not compliant if it fails to satisfy one or more
   of the MUST or REQUIRED level requirements for the protocols it
   implements. An implementation that satisfies all the MUST or REQUIRED
   level and all the SHOULD level requirements for its protocols is said
   to be "unconditionally compliant"; one that satisfies all the MUST
   level requirements but not all the SHOULD level requirements for its
   protocols is said to be "conditionally compliant."
</p>
<h3><a id="sec1.3">1.3</a> Terminology</h3>
<p>
   This specification uses a number of terms to refer to the roles
   played by participants in, and objects of, the HTTP communication.
</p>
<dl>
 <dt>   connection
</dt> <dd>      A transport layer virtual circuit established between two programs
      for the purpose of communication.
</dd>
 <dt>   message
</dt> <dd>      The basic unit of HTTP communication, consisting of a structured
      sequence of octets matching the syntax defined in section 4 and
      transmitted via the connection.
</dd>
 <dt>   request
</dt> <dd>      An HTTP request message, as defined in section 5.
</dd>
 <dt>   response
</dt> <dd>      An HTTP response message, as defined in section 6.
</dd>
 <dt>   resource
</dt> <dd>      A network data object or service that can be identified by a URI,
      as defined in section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.2">3.2</a>. Resources may be available in multiple
      representations (e.g. multiple languages, data formats, size, and
      resolutions) or vary in other ways.
</dd>
 <dt>   entity
</dt> <dd>      The information transferred as the payload of a request or
      response. An entity consists of metainformation in the form of
      entity-header fields and content in the form of an entity-body, as
      described in section 7.
</dd>
 <dt>   representation
</dt> <dd>      An entity included with a response that is subject to content
      negotiation, as described in section 12. There may exist multiple
      representations associated with a particular response status.
</dd>
 <dt>   content negotiation
</dt> <dd>      The mechanism for selecting the appropriate representation when
      servicing a request, as described in section 12. The
      representation of entities in any response can be negotiated
      (including error responses).
</dd>
 <dt>   variant
</dt> <dd>      A resource may have one, or more than one, representation(s)
      associated with it at any given instant. Each of these
      representations is termed a `varriant'.  Use of the term `variant'
      does not necessarily imply that the resource is subject to content
      negotiation.
</dd>
 <dt>   client
</dt> <dd>      A program that establishes connections for the purpose of sending
      requests.
</dd>
 <dt>   user agent
</dt> <dd>      The client which initiates a request. These are often browsers,
      editors, spiders (web-traversing robots), or other end user tools.
</dd>
 <dt>   server
</dt> <dd>      An application program that accepts connections in order to
      service requests by sending back responses. Any given program may
      be capable of being both a client and a server; our use of these
      terms refers only to the role being performed by the program for a
      particular connection, rather than to the program's capabilities
      in general. Likewise, any server may act as an origin server,
      proxy, gateway, or tunnel, switching behavior based on the nature
      of each request.
</dd>
 <dt>   origin server
</dt> <dd>      The server on which a given resource resides or is to be created.
</dd>
 <dt>   proxy
</dt> <dd>      An intermediary program which acts as both a server and a client
      for the purpose of making requests on behalf of other clients.
      Requests are serviced internally or by passing them on, with
      possible translation, to other servers. A proxy MUST implement
      both the client and server requirements of this specification. A
      "transparent proxy" is a proxy that does not modify the request or
      response beyond what is required for proxy authentication and
      identification. A "non-transparent proxy" is a proxy that modifies
      the request or response in order to provide some added service to
      the user agent, such as group annotation services, media type
      transformation, protocol reduction, or anonymity filtering. Except
      where either transparent or non-transparent behavior is explicitly
      stated, the HTTP proxy requirements apply to both types of
      proxies.
</dd>
 <dt>   gateway
</dt> <dd>      A server which acts as an intermediary for some other server.
      Unlike a proxy, a gateway receives requests as if it were the
      origin server for the requested resource; the requesting client
      may not be aware that it is communicating with a gateway.
</dd>
 <dt>   tunnel
</dt> <dd>      An intermediary program which is acting as a blind relay between
      two connections. Once active, a tunnel is not considered a party
      to the HTTP communication, though the tunnel may have been
      initiated by an HTTP request. The tunnel ceases to exist when both
      ends of the relayed connections are closed.
</dd>
 <dt>   cache
</dt> <dd>      A program's local store of response messages and the subsystem
      that controls its message storage, retrieval, and deletion. A
      cache stores cacheable responses in order to reduce the response
      time and network bandwidth consumption on future, equivalent
      requests. Any client or server may include a cache, though a cache
      cannot be used by a server that is acting as a tunnel.
</dd>
 <dt>   cacheable
</dt> <dd>      A response is cacheable if a cache is allowed to store a copy of
      the response message for use in answering subsequent requests. The
      rules for determining the cacheability of HTTP responses are
      defined in section 13. Even if a resource is cacheable, there may
      be additional constraints on whether a cache can use the cached
      copy for a particular request.
</dd>
 <dt>   first-hand
</dt> <dd>      A response is first-hand if it comes directly and without
      unnecessary delay from the origin server, perhaps via one or more
      proxies. A response is also first-hand if its validity has just
      been checked directly with the origin server.
</dd>
 <dt>   explicit expiration time
</dt> <dd>      The time at which the origin server intends that an entity should
      no longer be returned by a cache without further validation.
</dd>
 <dt>   heuristic expiration time
</dt> <dd>      An expiration time assigned by a cache when no explicit expiration
      time is available.
</dd>
 <dt>   age
</dt> <dd>      The age of a response is the time since it was sent by, or
      successfully validated with, the origin server.
</dd>
 <dt>   freshness lifetime
</dt> <dd>      The length of time between the generation of a response and its
      expiration time.
</dd>
 <dt>   fresh
</dt> <dd>      A response is fresh if its age has not yet exceeded its freshness
      lifetime.
</dd>
 <dt>   stale
</dt> <dd>      A response is stale if its age has passed its freshness lifetime.
</dd>
 <dt>   semantically transparent
</dt> <dd>      A cache behaves in a "semantically transparent" manner, with
      respect to a particular response, when its use affects neither the
      requesting client nor the origin server, except to improve
      performance. When a cache is semantically transparent, the client
      receives exactly the same response (except for hop-by-hop headers)
      that it would have received had its request been handled directly
      by the origin server.
</dd>
 <dt>   validator
</dt> <dd>      A protocol element (e.g., an entity tag or a Last-Modified time)
      that is used to find out whether a cache entry is an equivalent
      copy of an entity.
</dd>
 <dt>   upstream/downstream
</dt> <dd>      Upstream and downstream describe the flow of a message: all
      messages flow from upstream to downstream.
</dd>
 <dt>   inbound/outbound
</dt> <dd>      Inbound and outbound refer to the request and response paths for
      messages: "inbound" means "traveling toward the origin server",
      and "outbound" means "traveling toward the user agent"
</dd>
</dl>
<h3><a id="sec1.4">1.4</a> Overall Operation</h3>
<p>
   The HTTP protocol is a request/response protocol. A client sends a
   request to the server in the form of a request method, URI, and
   protocol version, followed by a MIME-like message containing request
   modifiers, client information, and possible body content over a
   connection with a server. The server responds with a status line,
   including the message's protocol version and a success or error code,
   followed by a MIME-like message containing server information, entity
   metainformation, and possible entity-body content. The relationship
   between HTTP and MIME is described in appendix <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.4">19.4</a>.
</p>
<p>
   Most HTTP communication is initiated by a user agent and consists of
   a request to be applied to a resource on some origin server. In the
   simplest case, this may be accomplished via a single connection (v)
   between the user agent (UA) and the origin server (O).
</p>
<pre>          request chain ------------------------&gt;
       UA -------------------v------------------- O
          &lt;----------------------- response chain
</pre>
<p>
   A more complicated situation occurs when one or more intermediaries
   are present in the request/response chain. There are three common
   forms of intermediary: proxy, gateway, and tunnel. A proxy is a
   forwarding agent, receiving requests for a URI in its absolute form,
   rewriting all or part of the message, and forwarding the reformatted
   request toward the server identified by the URI. A gateway is a
   receiving agent, acting as a layer above some other server(s) and, if
   necessary, translating the requests to the underlying server's
   protocol. A tunnel acts as a relay point between two connections
   without changing the messages; tunnels are used when the
   communication needs to pass through an intermediary (such as a
   firewall) even when the intermediary cannot understand the contents
   of the messages.
</p>
<pre>          request chain --------------------------------------&gt;
       UA -----v----- A -----v----- B -----v----- C -----v----- O
          &lt;------------------------------------- response chain
</pre>
<p>
   The figure above shows three intermediaries (A, B, and C) between the
   user agent and origin server. A request or response message that
   travels the whole chain will pass through four separate connections.
   This distinction is important because some HTTP communication options
</p>
<p>
   may apply only to the connection with the nearest, non-tunnel
   neighbor, only to the end-points of the chain, or to all connections
   along the chain. Although the diagram is linear, each participant may
   be engaged in multiple, simultaneous communications. For example, B
   may be receiving requests from many clients other than A, and/or
   forwarding requests to servers other than C, at the same time that it
   is handling A's request.
</p>
<p>
   Any party to the communication which is not acting as a tunnel may
   employ an internal cache for handling requests. The effect of a cache
   is that the request/response chain is shortened if one of the
   participants along the chain has a cached response applicable to that
   request. The following illustrates the resulting chain if B has a
   cached copy of an earlier response from O (via C) for a request which
   has not been cached by UA or A.
</p>
<pre>          request chain ----------&gt;
       UA -----v----- A -----v----- B - - - - - - C - - - - - - O
          &lt;--------- response chain
</pre>
<p>
   Not all responses are usefully cacheable, and some requests may
   contain modifiers which place special requirements on cache behavior.
   HTTP requirements for cache behavior and cacheable responses are
   defined in section 13.
</p>
<p>
   In fact, there are a wide variety of architectures and configurations
   of caches and proxies currently being experimented with or deployed
   across the World Wide Web. These systems include national hierarchies
   of proxy caches to save transoceanic bandwidth, systems that
   broadcast or multicast cache entries, organizations that distribute
   subsets of cached data via CD-ROM, and so on. HTTP systems are used
   in corporate intranets over high-bandwidth links, and for access via
   PDAs with low-power radio links and intermittent connectivity. The
   goal of HTTP/1.1 is to support the wide diversity of configurations
   already deployed while introducing protocol constructs that meet the
   needs of those who build web applications that require high
   reliability and, failing that, at least reliable indications of
   failure.
</p>
<p>
   HTTP communication usually takes place over TCP/IP connections. The
   default port is TCP 80 [19], but other ports can be used. This does
   not preclude HTTP from being implemented on top of any other protocol
   on the Internet, or on other networks. HTTP only presumes a reliable
   transport; any protocol that provides such guarantees can be used;
   the mapping of the HTTP/1.1 request and response structures onto the
   transport data units of the protocol in question is outside the scope
   of this specification.
</p>
<p>
   In HTTP/1.0, most implementations used a new connection for each
   request/response exchange. In HTTP/1.1, a connection may be used for
   one or more request/response exchanges, although connections may be
   closed for a variety of reasons (see section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec8.html#sec8.1">8.1</a>).
</p>
</body></html>
"""
Transfered bytes: 18242
From disk.
Executed in thread 'Hilo (1)'.

Date: Mon, 27 Sep 2010 06:44:13 
IP: 127.0.0.1
URL requested:html/rfc2616-sec3.html
Sended code: """HTTP/1.1 
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 06:44:13 
Content-Type: text/html
Content-Length: 36319

<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head>
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">

<title>HTTP/1.1: Protocol Parameters</title></head><body><address>part of <a rev="Section" href="http://www.w3.org/Protocols/rfc2616/rfc2616.html">Hypertext Transfer Protocol -- HTTP/1.1</a><br>
RFC 2616 Fielding, et al.</address>
<h2><a id="sec3">3</a> Protocol Parameters</h2>
<h3><a id="sec3.1">3.1</a> HTTP Version</h3>
<p>
   HTTP uses a "&lt;major&gt;.&lt;minor&gt;" numbering scheme to indicate versions
   of the protocol. The protocol versioning policy is intended to allow
   the sender to indicate the format of a message and its capacity for
   understanding further HTTP communication, rather than the features
   obtained via that communication. No change is made to the version
   number for the addition of message components which do not affect
   communication behavior or which only add to extensible field values.
   The &lt;minor&gt; number is incremented when the changes made to the
   protocol add features which do not change the general message parsing
   algorithm, but which may add to the message semantics and imply
   additional capabilities of the sender. The &lt;major&gt; number is
   incremented when the format of a message within the protocol is
   changed. See RFC 2145 <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib36">[36]</a> for a fuller explanation.
</p>
<p>
   The version of an HTTP message is indicated by an HTTP-Version field
   in the first line of the message.
</p>
<pre>       HTTP-Version   = "HTTP" "/" 1*DIGIT "." 1*DIGIT
</pre>
<p>
   Note that the major and minor numbers MUST be treated as separate
   integers and that each MAY be incremented higher than a single digit.
   Thus, HTTP/2.4 is a lower version than HTTP/2.13, which in turn is
   lower than HTTP/12.3. Leading zeros MUST be ignored by recipients and
   MUST NOT be sent.
</p>
<p>
   An application that sends a request or response message that includes
   HTTP-Version of "HTTP/1.1" MUST be at least conditionally compliant
   with this specification. Applications that are at least conditionally
   compliant with this specification SHOULD use an HTTP-Version of
   "HTTP/1.1" in their messages, and MUST do so for any message that is
   not compatible with HTTP/1.0. For more details on when to send
   specific HTTP-Version values, see RFC 2145 <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib36">[36]</a>.
</p>
<p>
   The HTTP version of an application is the highest HTTP version for
   which the application is at least conditionally compliant.
</p>
<p>
   Proxy and gateway applications need to be careful when forwarding
   messages in protocol versions different from that of the application.
   Since the protocol version indicates the protocol capability of the
   sender, a proxy/gateway MUST NOT send a message with a version
   indicator which is greater than its actual version. If a higher
   version request is received, the proxy/gateway MUST either downgrade
   the request version, or respond with an error, or switch to tunnel
   behavior.
</p>
<p>
   Due to interoperability problems with HTTP/1.0 proxies discovered
   since the publication of RFC 2068[33], caching proxies MUST, gateways
   MAY, and tunnels MUST NOT upgrade the request to the highest version
   they support. The proxy/gateway's response to that request MUST be in
   the same major version as the request.
</p>
<pre>      Note: Converting between versions of HTTP may involve modification
      of header fields required or forbidden by the versions involved.
</pre>
<h3><a id="sec3.2">3.2</a> Uniform Resource Identifiers</h3>
<p>
   URIs have been known by many names: WWW addresses, Universal Document
   Identifiers, Universal Resource Identifiers [3], and finally the
   combination of Uniform Resource Locators (URL) <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib4">[4]</a> and Names (URN)
   <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib20">[20]</a>. As far as HTTP is concerned, Uniform Resource Identifiers are
   simply formatted strings which identify--via name, location, or any
   other characteristic--a resource.
</p>
<h3><a id="sec3.2.1">3.2.1</a> General Syntax</h3>
<p>
   URIs in HTTP can be represented in absolute form or relative to some
   known base URI [11], depending upon the context of their use. The two
   forms are differentiated by the fact that absolute URIs always begin
   with a scheme name followed by a colon. For definitive information on
   URL syntax and semantics, see "Uniform Resource Identifiers (URI):
   Generic Syntax and Semantics," RFC 2396 <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib42">[42]</a> (which replaces RFCs
   1738 <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib4">[4]</a> and RFC 1808 <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib11">[11]</a>). This specification adopts the
   definitions of "URI-reference", "absoluteURI", "relativeURI", "port",
   "host","abs_path", "rel_path", and "authority" from that
   specification.
</p>
<p>
   The HTTP protocol does not place any a priori limit on the length of
   a URI. Servers MUST be able to handle the URI of any resource they
   serve, and SHOULD be able to handle URIs of unbounded length if they
   provide GET-based forms that could generate such URIs. A server
   SHOULD return 414 (Request-URI Too Long) status if a URI is longer
   than the server can handle (see section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.15">10.4.15</a>).
</p>
<pre>      Note: Servers ought to be cautious about depending on URI lengths
      above 255 bytes, because some older client or proxy
      implementations might not properly support these lengths.
</pre>
<h3><a id="sec3.2.2">3.2.2</a> http URL</h3>
<p>
   The "http" scheme is used to locate network resources via the HTTP
   protocol. This section defines the scheme-specific syntax and
   semantics for http URLs.
</p>
<p>
   http_URL = "http:" "//" host [ ":" port ] [ abs_path [ "?" query ]]
</p>
<p>
   If the port is empty or not given, port 80 is assumed. The semantics
   are that the identified resource is located at the server listening
   for TCP connections on that port of that host, and the Request-URI
   for the resource is abs_path (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec5.html#sec5.1.2">5.1.2</a>). The use of IP addresses
   in URLs SHOULD be avoided whenever possible (see RFC 1900 <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib24">[24]</a>). If
   the abs_path is not present in the URL, it MUST be given as "/" when
   used as a Request-URI for a resource (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec5.html#sec5.1.2">5.1.2</a>). If a proxy
   receives a host name which is not a fully qualified domain name, it
   MAY add its domain to the host name it received. If a proxy receives
   a fully qualified domain name, the proxy MUST NOT change the host
   name.
</p>
<h3><a id="sec3.2.3">3.2.3</a> URI Comparison</h3>
<p>
   When comparing two URIs to decide if they match or not, a client
   SHOULD use a case-sensitive octet-by-octet comparison of the entire
   URIs, with these exceptions:
</p>
<pre>      - A port that is empty or not given is equivalent to the default
        port for that URI-reference;
</pre>
<pre>        - Comparisons of host names MUST be case-insensitive;
</pre>
<pre>        - Comparisons of scheme names MUST be case-insensitive;
</pre>
<pre>        - An empty abs_path is equivalent to an abs_path of "/".
</pre>
<p>
   Characters other than those in the "reserved" and "unsafe" sets (see
   RFC 2396 [42]) are equivalent to their ""%" HEX HEX" encoding.
</p>
<p>
   For example, the following three URIs are equivalent:
</p>
<pre>      http://abc.com:80/~smith/home.html
      http://ABC.com/%7Esmith/home.html
      http://ABC.com:/%7esmith/home.html
</pre>
<h3><a id="sec3.3">3.3</a> Date/Time Formats</h3>
<h3><a id="sec3.3.1">3.3.1</a> Full Date</h3>
<p>
   HTTP applications have historically allowed three different formats
   for the representation of date/time stamps:
</p>
<pre>      Sun, 06 Nov 1994 08:49:37 GMT  ; RFC 822, updated by RFC 1123
      Sunday, 06-Nov-94 08:49:37 GMT ; RFC 850, obsoleted by RFC 1036
      Sun Nov  6 08:49:37 1994       ; ANSI C's asctime() format
</pre>
<p>
   The first format is preferred as an Internet standard and represents
   a fixed-length subset of that defined by RFC 1123 [8] (an update to
   RFC 822 <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib9">[9]</a>). The second format is in common use, but is based on the
   obsolete RFC 850 <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib12">[12]</a> date format and lacks a four-digit year.
   HTTP/1.1 clients and servers that parse the date value MUST accept
   all three formats (for compatibility with HTTP/1.0), though they MUST
   only generate the RFC 1123 format for representing HTTP-date values
   in header fields. See section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.3">19.3</a> for further information.
</p>
<pre>      Note: Recipients of date values are encouraged to be robust in
      accepting date values that may have been sent by non-HTTP
      applications, as is sometimes the case when retrieving or posting
      messages via proxies/gateways to SMTP or NNTP.
</pre>
<p>
   All HTTP date/time stamps MUST be represented in Greenwich Mean Time
   (GMT), without exception. For the purposes of HTTP, GMT is exactly
   equal to UTC (Coordinated Universal Time). This is indicated in the
   first two formats by the inclusion of "GMT" as the three-letter
   abbreviation for time zone, and MUST be assumed when reading the
   asctime format. HTTP-date is case sensitive and MUST NOT include
   additional LWS beyond that specifically included as SP in the
   grammar.
</p>
<pre>       HTTP-date    = rfc1123-date | rfc850-date | asctime-date
       rfc1123-date = wkday "," SP date1 SP time SP "GMT"
       rfc850-date  = weekday "," SP date2 SP time SP "GMT"
       asctime-date = wkday SP date3 SP time SP 4DIGIT
       date1        = 2DIGIT SP month SP 4DIGIT
                      ; day month year (e.g., 02 Jun 1982)
       date2        = 2DIGIT "-" month "-" 2DIGIT
                      ; day-month-year (e.g., 02-Jun-82)
       date3        = month SP ( 2DIGIT | ( SP 1DIGIT ))
                      ; month day (e.g., Jun  2)
       time         = 2DIGIT ":" 2DIGIT ":" 2DIGIT
                      ; 00:00:00 - 23:59:59
       wkday        = "Mon" | "Tue" | "Wed"
                    | "Thu" | "Fri" | "Sat" | "Sun"
       weekday      = "Monday" | "Tuesday" | "Wednesday"
                    | "Thursday" | "Friday" | "Saturday" | "Sunday"
       month        = "Jan" | "Feb" | "Mar" | "Apr"
                    | "May" | "Jun" | "Jul" | "Aug"
                    | "Sep" | "Oct" | "Nov" | "Dec"
</pre>
<pre>      Note: HTTP requirements for the date/time stamp format apply only
      to their usage within the protocol stream. Clients and servers are
      not required to use these formats for user presentation, request
      logging, etc.
</pre>
<h3><a id="sec3.3.2">3.3.2</a> Delta Seconds</h3>
<p>
   Some HTTP header fields allow a time value to be specified as an
   integer number of seconds, represented in decimal, after the time
   that the message was received.
</p>
<pre>       delta-seconds  = 1*DIGIT
</pre>
<h3><a id="sec3.4">3.4</a> Character Sets</h3>
<p>
   HTTP uses the same definition of the term "character set" as that
   described for MIME:
</p>
<p>
   The term "character set" is used in this document to refer to a
   method used with one or more tables to convert a sequence of octets
   into a sequence of characters. Note that unconditional conversion in
   the other direction is not required, in that not all characters may
   be available in a given character set and a character set may provide
   more than one sequence of octets to represent a particular character.
   This definition is intended to allow various kinds of character
   encoding, from simple single-table mappings such as US-ASCII to
   complex table switching methods such as those that use ISO-2022's
   techniques. However, the definition associated with a MIME character
   set name MUST fully specify the mapping to be performed from octets
   to characters. In particular, use of external profiling information
   to determine the exact mapping is not permitted.
</p>
<pre>      Note: This use of the term "character set" is more commonly
      referred to as a "character encoding." However, since HTTP and
      MIME share the same registry, it is important that the terminology
      also be shared.
</pre>
<p>
   HTTP character sets are identified by case-insensitive tokens. The
   complete set of tokens is defined by the IANA Character Set registry
   <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib19">[19]</a>.
</p>
<pre>       charset = token
</pre>
<p>
   Although HTTP allows an arbitrary token to be used as a charset
   value, any token that has a predefined value within the IANA
   Character Set registry <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib19">[19]</a> MUST represent the character set defined
   by that registry. Applications SHOULD limit their use of character
   sets to those defined by the IANA registry.
</p>
<p>
   Implementors should be aware of IETF character set requirements <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib38">[38]</a>
   [41].
</p>
<h3><a id="sec3.4.1">3.4.1</a> Missing Charset</h3>
<p>
   Some HTTP/1.0 software has interpreted a Content-Type header without
   charset parameter incorrectly to mean "recipient should guess."
   Senders wishing to defeat this behavior MAY include a charset
   parameter even when the charset is ISO-8859-1 and SHOULD do so when
   it is known that it will not confuse the recipient.
</p>
<p>
   Unfortunately, some older HTTP/1.0 clients did not deal properly with
   an explicit charset parameter. HTTP/1.1 recipients MUST respect the
   charset label provided by the sender; and those user agents that have
   a provision to "guess" a charset MUST use the charset from the
</p>
<p>
   content-type field if they support that charset, rather than the
   recipient's preference, when initially displaying a document. See
   section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.7.1">3.7.1</a>.
</p>
<h3><a id="sec3.5">3.5</a> Content Codings</h3>
<p>
   Content coding values indicate an encoding transformation that has
   been or can be applied to an entity. Content codings are primarily
   used to allow a document to be compressed or otherwise usefully
   transformed without losing the identity of its underlying media type
   and without loss of information. Frequently, the entity is stored in
   coded form, transmitted directly, and only decoded by the recipient.
</p>
<pre>       content-coding   = token
</pre>
<p>
   All content-coding values are case-insensitive. HTTP/1.1 uses
   content-coding values in the Accept-Encoding (section 14.3) and
   Content-Encoding (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.11">14.11</a>) header fields. Although the value
   describes the content-coding, what is more important is that it
   indicates what decoding mechanism will be required to remove the
   encoding.
</p>
<p>
   The Internet Assigned Numbers Authority (IANA) acts as a registry for
   content-coding value tokens. Initially, the registry contains the
   following tokens:
</p>
<p>
   gzip An encoding format produced by the file compression program
        "gzip" (GNU zip) as described in RFC 1952 [25]. This format is a
        Lempel-Ziv coding (LZ77) with a 32 bit CRC.
</p>
<p>
   compress
        The encoding format produced by the common UNIX file compression
        program "compress". This format is an adaptive Lempel-Ziv-Welch
        coding (LZW).
</p>
<pre>        Use of program names for the identification of encoding formats
        is not desirable and is discouraged for future encodings. Their
        use here is representative of historical practice, not good
        design. For compatibility with previous implementations of HTTP,
        applications SHOULD consider "x-gzip" and "x-compress" to be
        equivalent to "gzip" and "compress" respectively.
</pre>
<p>
   deflate
        The "zlib" format defined in RFC 1950 [31] in combination with
        the "deflate" compression mechanism described in RFC 1951 <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib29">[29]</a>.
</p>
<p>
   identity
        The default (identity) encoding; the use of no transformation
        whatsoever. This content-coding is used only in the Accept-
        Encoding header, and SHOULD NOT be used in the Content-Encoding
        header.
</p>
<p>
   New content-coding value tokens SHOULD be registered; to allow
   interoperability between clients and servers, specifications of the
   content coding algorithms needed to implement a new value SHOULD be
   publicly available and adequate for independent implementation, and
   conform to the purpose of content coding defined in this section.
</p>
<h3><a id="sec3.6">3.6</a> Transfer Codings</h3>
<p>
   Transfer-coding values are used to indicate an encoding
   transformation that has been, can be, or may need to be applied to an
   entity-body in order to ensure "safe transport" through the network.
   This differs from a content coding in that the transfer-coding is a
   property of the message, not of the original entity.
</p>
<pre>       transfer-coding         = "chunked" | transfer-extension
       transfer-extension      = token *( ";" parameter )
</pre>
<p>
   Parameters are in  the form of attribute/value pairs.
</p>
<pre>       parameter               = attribute "=" value
       attribute               = token
       value                   = token | quoted-string
</pre>
<p>
   All transfer-coding values are case-insensitive. HTTP/1.1 uses
   transfer-coding values in the TE header field (section 14.39) and in
   the Transfer-Encoding header field (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.41">14.41</a>).
</p>
<p>
   Whenever a transfer-coding is applied to a message-body, the set of
   transfer-codings MUST include "chunked", unless the message is
   terminated by closing the connection. When the "chunked" transfer-
   coding is used, it MUST be the last transfer-coding applied to the
   message-body. The "chunked" transfer-coding MUST NOT be applied more
   than once to a message-body. These rules allow the recipient to
   determine the transfer-length of the message (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.4">4.4</a>).
</p>
<p>
   Transfer-codings are analogous to the Content-Transfer-Encoding
   values of MIME [7], which were designed to enable safe transport of
   binary data over a 7-bit transport service. However, safe transport
   has a different focus for an 8bit-clean transfer protocol. In HTTP,
   the only unsafe characteristic of message-bodies is the difficulty in
   determining the exact body length (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec7.html#sec7.2.2">7.2.2</a>), or the desire to
   encrypt data over a shared transport.
</p>
<p>
   The Internet Assigned Numbers Authority (IANA) acts as a registry for
   transfer-coding value tokens. Initially, the registry contains the
   following tokens: "chunked" (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.6.1">3.6.1</a>), "identity" (section
   <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.6.2">3.6.2</a>), "gzip" (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.5">3.5</a>), "compress" (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.5">3.5</a>), and "deflate"
   (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.5">3.5</a>).
</p>
<p>
   New transfer-coding value tokens SHOULD be registered in the same way
   as new content-coding value tokens (section 3.5).
</p>
<p>
   A server which receives an entity-body with a transfer-coding it does
   not understand SHOULD return 501 (Unimplemented), and close the
   connection. A server MUST NOT send transfer-codings to an HTTP/1.0
   client.
</p>
<h3><a id="sec3.6.1">3.6.1</a> Chunked Transfer Coding</h3>
<p>
   The chunked encoding modifies the body of a message in order to
   transfer it as a series of chunks, each with its own size indicator,
   followed by an OPTIONAL trailer containing entity-header fields. This
   allows dynamically produced content to be transferred along with the
   information necessary for the recipient to verify that it has
   received the full message.
</p>
<pre>       Chunked-Body   = *chunk
                        last-chunk
                        trailer
                        CRLF
</pre>
<pre>       chunk          = chunk-size [ chunk-extension ] CRLF
                        chunk-data CRLF
       chunk-size     = 1*HEX
       last-chunk     = 1*("0") [ chunk-extension ] CRLF
</pre>
<pre>       chunk-extension= *( ";" chunk-ext-name [ "=" chunk-ext-val ] )
       chunk-ext-name = token
       chunk-ext-val  = token | quoted-string
       chunk-data     = chunk-size(OCTET)
       trailer        = *(entity-header CRLF)
</pre>
<p>
   The chunk-size field is a string of hex digits indicating the size of
   the chunk. The chunked encoding is ended by any chunk whose size is
   zero, followed by the trailer, which is terminated by an empty line.
</p>
<p>
   The trailer allows the sender to include additional HTTP header
   fields at the end of the message. The Trailer header field can be
   used to indicate which header fields are included in a trailer (see
   section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.40">14.40</a>).
</p>
<p>
   A server using chunked transfer-coding in a response MUST NOT use the
   trailer for any header fields unless at least one of the following is
   true:
</p>
<p>
   a)the request included a TE header field that indicates "trailers" is
     acceptable in the transfer-coding of the  response, as described in
     section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.39">14.39</a>; or,
</p>
<p>
   b)the server is the origin server for the response, the trailer
     fields consist entirely of optional metadata, and the recipient
     could use the message (in a manner acceptable to the origin server)
     without receiving this metadata.  In other words, the origin server
     is willing to accept the possibility that the trailer fields might
     be silently discarded along the path to the client.
</p>
<p>
   This requirement prevents an interoperability failure when the
   message is being received by an HTTP/1.1 (or later) proxy and
   forwarded to an HTTP/1.0 recipient. It avoids a situation where
   compliance with the protocol would have necessitated a possibly
   infinite buffer on the proxy.
</p>
<p>
   An example process for decoding a Chunked-Body is presented in
   appendix 19.4.6.
</p>
<p>
   All HTTP/1.1 applications MUST be able to receive and decode the
   "chunked" transfer-coding, and MUST ignore chunk-extension extensions
   they do not understand.
</p>
<h3><a id="sec3.7">3.7</a> Media Types</h3>
<p>
   HTTP uses Internet Media Types <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib17">[17]</a> in the Content-Type (section
   14.17) and Accept (section 14.1) header fields in order to provide
   open and extensible data typing and type negotiation.
</p>
<pre>       media-type     = type "/" subtype *( ";" parameter )
       type           = token
       subtype        = token
</pre>
<p>
   Parameters MAY follow the type/subtype in the form of attribute/value
   pairs (as defined in section 3.6).
</p>
<p>
   The type, subtype, and parameter attribute names are case-
   insensitive. Parameter values might or might not be case-sensitive,
   depending on the semantics of the parameter name. Linear white space
   (LWS) MUST NOT be used between the type and subtype, nor between an
   attribute and its value. The presence or absence of a parameter might
   be significant to the processing of a media-type, depending on its
   definition within the media type registry.
</p>
<p>
   Note that some older HTTP applications do not recognize media type
   parameters. When sending data to older HTTP applications,
   implementations SHOULD only use media type parameters when they are
   required by that type/subtype definition.
</p>
<p>
   Media-type values are registered with the Internet Assigned Number
   Authority (IANA [19]). The media type registration process is
   outlined in RFC 1590 <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib17">[17]</a>. Use of non-registered media types is
   discouraged.
</p>
<h3><a id="sec3.7.1">3.7.1</a> Canonicalization and Text Defaults</h3>
<p>
   Internet media types are registered with a canonical form. An
   entity-body transferred via HTTP messages MUST be represented in the
   appropriate canonical form prior to its transmission except for
   "text" types, as defined in the next paragraph.
</p>
<p>
   When in canonical form, media subtypes of the "text" type use CRLF as
   the text line break. HTTP relaxes this requirement and allows the
   transport of text media with plain CR or LF alone representing a line
   break when it is done consistently for an entire entity-body. HTTP
   applications MUST accept CRLF, bare CR, and bare LF as being
   representative of a line break in text media received via HTTP. In
   addition, if the text is represented in a character set that does not
   use octets 13 and 10 for CR and LF respectively, as is the case for
   some multi-byte character sets, HTTP allows the use of whatever octet
   sequences are defined by that character set to represent the
   equivalent of CR and LF for line breaks. This flexibility regarding
   line breaks applies only to text media in the entity-body; a bare CR
   or LF MUST NOT be substituted for CRLF within any of the HTTP control
   structures (such as header fields and multipart boundaries).
</p>
<p>
   If an entity-body is encoded with a content-coding, the underlying
   data MUST be in a form defined above prior to being encoded.
</p>
<p>
   The "charset" parameter is used with some media types to define the
   character set (section 3.4) of the data. When no explicit charset
   parameter is provided by the sender, media subtypes of the "text"
   type are defined to have a default charset value of "ISO-8859-1" when
   received via HTTP. Data in character sets other than "ISO-8859-1" or
   its subsets MUST be labeled with an appropriate charset value. See
   section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.4.1">3.4.1</a> for compatibility problems.
</p>
<h3><a id="sec3.7.2">3.7.2</a> Multipart Types</h3>
<p>
   MIME provides for a number of "multipart" types -- encapsulations of
   one or more entities within a single message-body. All multipart
   types share a common syntax, as defined in section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec5.html#sec5.1.1">5.1.1</a> of RFC 2046
</p>
<p>
   <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib40">[40]</a>, and MUST include a boundary parameter as part of the media type
   value. The message body is itself a protocol element and MUST
   therefore use only CRLF to represent line breaks between body-parts.
   Unlike in RFC 2046, the epilogue of any multipart message MUST be
   empty; HTTP applications MUST NOT transmit the epilogue (even if the
   original multipart contains an epilogue). These restrictions exist in
   order to preserve the self-delimiting nature of a multipart message-
   body, wherein the "end" of the message-body is indicated by the
   ending multipart boundary.
</p>
<p>
   In general, HTTP treats a multipart message-body no differently than
   any other media type: strictly as payload. The one exception is the
   "multipart/byteranges" type (appendix <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.2">19.2</a>) when it appears in a 206
   (Partial Content) response, which will be interpreted by some HTTP
   caching mechanisms as described in sections <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html#sec13.5.4">13.5.4</a> and <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16">14.16</a>. In all
   other cases, an HTTP user agent SHOULD follow the same or similar
   behavior as a MIME user agent would upon receipt of a multipart type.
   The MIME header fields within each body-part of a multipart message-
   body do not have any significance to HTTP beyond that defined by
   their MIME semantics.
</p>
<p>
   In general, an HTTP user agent SHOULD follow the same or similar
   behavior as a MIME user agent would upon receipt of a multipart type.
   If an application receives an unrecognized multipart subtype, the
   application MUST treat it as being equivalent to "multipart/mixed".
</p>
<pre>      Note: The "multipart/form-data" type has been specifically defined
      for carrying form data suitable for processing via the POST
      request method, as described in RFC 1867 <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib15">[15]</a>.
</pre>
<h3><a id="sec3.8">3.8</a> Product Tokens</h3>
<p>
   Product tokens are used to allow communicating applications to
   identify themselves by software name and version. Most fields using
   product tokens also allow sub-products which form a significant part
   of the application to be listed, separated by white space. By
   convention, the products are listed in order of their significance
   for identifying the application.
</p>
<pre>       product         = token ["/" product-version]
       product-version = token
</pre>
<p>
   Examples:
</p>
<pre>       User-Agent: CERN-LineMode/2.15 libwww/2.17b3
       Server: Apache/0.8.4
</pre>
<p>
   Product tokens SHOULD be short and to the point. They MUST NOT be
   used for advertising or other non-essential information. Although any
   token character MAY appear in a product-version, this token SHOULD
   only be used for a version identifier (i.e., successive versions of
   the same product SHOULD only differ in the product-version portion of
   the product value).
</p>
<h3><a id="sec3.9">3.9</a> Quality Values</h3>
<p>
   HTTP content negotiation (section 12) uses short "floating point"
   numbers to indicate the relative importance ("weight") of various
   negotiable parameters.  A weight is normalized to a real number in
   the range 0 through 1, where 0 is the minimum and 1 the maximum
   value. If a parameter has a quality value of 0, then content with
   this parameter is `not acceptable' for the client. HTTP/1.1
   applications MUST NOT generate more than three digits after the
   decimal point. User configuration of these values SHOULD also be
   limited in this fashion.
</p>
<pre>       qvalue         = ( "0" [ "." 0*3DIGIT ] )
                      | ( "1" [ "." 0*3("0") ] )
</pre>
<p>
   "Quality values" is a misnomer, since these values merely represent
   relative degradation in desired quality.
</p>
<h3><a id="sec3.10">3.10</a> Language Tags</h3>
<p>
   A language tag identifies a natural language spoken, written, or
   otherwise conveyed by human beings for communication of information
   to other human beings. Computer languages are explicitly excluded.
   HTTP uses language tags within the Accept-Language and Content-
   Language fields.
</p>
<p>
   The syntax and registry of HTTP language tags is the same as that
   defined by RFC 1766 [1]. In summary, a language tag is composed of 1
   or more parts: A primary language tag and a possibly empty series of
   subtags:
</p>
<pre>        language-tag  = primary-tag *( "-" subtag )
        primary-tag   = 1*8ALPHA
        subtag        = 1*8ALPHA
</pre>
<p>
   White space is not allowed within the tag and all tags are case-
   insensitive. The name space of language tags is administered by the
   IANA. Example tags include:
</p>
<pre>       en, en-US, en-cockney, i-cherokee, x-pig-latin
</pre>
<p>
   where any two-letter primary-tag is an ISO-639 language abbreviation
   and any two-letter initial subtag is an ISO-3166 country code. (The
   last three tags above are not registered tags; all but the last are
   examples of tags which could be registered in future.)
</p>
<h3><a id="sec3.11">3.11</a> Entity Tags</h3>
<p>
   Entity tags are used for comparing two or more entities from the same
   requested resource. HTTP/1.1 uses entity tags in the ETag (section
   <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.19">14.19</a>), If-Match (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.24">14.24</a>), If-None-Match (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.26">14.26</a>), and
   If-Range (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.27">14.27</a>) header fields. The definition of how they
   are used and compared as cache validators is in section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html#sec13.3.3">13.3.3</a>. An
   entity tag consists of an opaque quoted string, possibly prefixed by
   a weakness indicator.
</p>
<pre>      entity-tag = [ weak ] opaque-tag
      weak       = "W/"
      opaque-tag = quoted-string
</pre>
<p>
   A "strong entity tag" MAY be shared by two entities of a resource
   only if they are equivalent by octet equality.
</p>
<p>
   A "weak entity tag," indicated by the "W/" prefix, MAY be shared by
   two entities of a resource only if the entities are equivalent and
   could be substituted for each other with no significant change in
   semantics. A weak entity tag can only be used for weak comparison.
</p>
<p>
   An entity tag MUST be unique across all versions of all entities
   associated with a particular resource. A given entity tag value MAY
   be used for entities obtained by requests on different URIs. The use
   of the same entity tag value in conjunction with entities obtained by
   requests on different URIs does not imply the equivalence of those
   entities.
</p>
<h3><a id="sec3.12">3.12</a> Range Units</h3>
<p>
   HTTP/1.1 allows a client to request that only part (a range of) the
   response entity be included within the response. HTTP/1.1 uses range
   units in the Range (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35">14.35</a>) and Content-Range (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16">14.16</a>)
   header fields. An entity can be broken down into subranges according
   to various structural units.
</p>
<pre>      range-unit       = bytes-unit | other-range-unit
      bytes-unit       = "bytes"
      other-range-unit = token
</pre>
<p>
   The only range unit defined by HTTP/1.1 is "bytes". HTTP/1.1
   implementations MAY ignore ranges specified using other units.
</p>
<p>
   HTTP/1.1 has been designed to allow implementations of applications
   that do not depend on knowledge of ranges.
</p>
</body></html>
"""
Transfered bytes: 36449
From disk.
Executed in thread 'Hilo (2)'.

Date: Mon, 27 Sep 2010 06:44:19 
IP: 127.0.0.1
URL requested:html/rfc2616-sec%203.html
Sended code: """HTTP/1.1 404
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 06:44:19 
"""
Transfered bytes: 85
From .
Executed in thread 'Hilo (3)'.

Date: Mon, 27 Sep 2010 06:50:29 
IP: 127.0.0.1
URL requested:html/rfc2616-sec%203.html
Sended code: """HTTP/1.1 404
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 06:50:29 
"""
Transfered bytes: 85
From .
Executed in thread 'Hilo (4)'.

Date: Mon, 27 Sep 2010 06:50:33 
IP: 127.0.0.1
URL requested:html/rfc2616-sec3.html
Sended code: """HTTP/1.1 
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 06:50:33 
Content-Type: text/html
Content-Length: 36319

<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head>
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">

<title>HTTP/1.1: Protocol Parameters</title></head><body><address>part of <a rev="Section" href="http://www.w3.org/Protocols/rfc2616/rfc2616.html">Hypertext Transfer Protocol -- HTTP/1.1</a><br>
RFC 2616 Fielding, et al.</address>
<h2><a id="sec3">3</a> Protocol Parameters</h2>
<h3><a id="sec3.1">3.1</a> HTTP Version</h3>
<p>
   HTTP uses a "&lt;major&gt;.&lt;minor&gt;" numbering scheme to indicate versions
   of the protocol. The protocol versioning policy is intended to allow
   the sender to indicate the format of a message and its capacity for
   understanding further HTTP communication, rather than the features
   obtained via that communication. No change is made to the version
   number for the addition of message components which do not affect
   communication behavior or which only add to extensible field values.
   The &lt;minor&gt; number is incremented when the changes made to the
   protocol add features which do not change the general message parsing
   algorithm, but which may add to the message semantics and imply
   additional capabilities of the sender. The &lt;major&gt; number is
   incremented when the format of a message within the protocol is
   changed. See RFC 2145 <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib36">[36]</a> for a fuller explanation.
</p>
<p>
   The version of an HTTP message is indicated by an HTTP-Version field
   in the first line of the message.
</p>
<pre>       HTTP-Version   = "HTTP" "/" 1*DIGIT "." 1*DIGIT
</pre>
<p>
   Note that the major and minor numbers MUST be treated as separate
   integers and that each MAY be incremented higher than a single digit.
   Thus, HTTP/2.4 is a lower version than HTTP/2.13, which in turn is
   lower than HTTP/12.3. Leading zeros MUST be ignored by recipients and
   MUST NOT be sent.
</p>
<p>
   An application that sends a request or response message that includes
   HTTP-Version of "HTTP/1.1" MUST be at least conditionally compliant
   with this specification. Applications that are at least conditionally
   compliant with this specification SHOULD use an HTTP-Version of
   "HTTP/1.1" in their messages, and MUST do so for any message that is
   not compatible with HTTP/1.0. For more details on when to send
   specific HTTP-Version values, see RFC 2145 <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib36">[36]</a>.
</p>
<p>
   The HTTP version of an application is the highest HTTP version for
   which the application is at least conditionally compliant.
</p>
<p>
   Proxy and gateway applications need to be careful when forwarding
   messages in protocol versions different from that of the application.
   Since the protocol version indicates the protocol capability of the
   sender, a proxy/gateway MUST NOT send a message with a version
   indicator which is greater than its actual version. If a higher
   version request is received, the proxy/gateway MUST either downgrade
   the request version, or respond with an error, or switch to tunnel
   behavior.
</p>
<p>
   Due to interoperability problems with HTTP/1.0 proxies discovered
   since the publication of RFC 2068[33], caching proxies MUST, gateways
   MAY, and tunnels MUST NOT upgrade the request to the highest version
   they support. The proxy/gateway's response to that request MUST be in
   the same major version as the request.
</p>
<pre>      Note: Converting between versions of HTTP may involve modification
      of header fields required or forbidden by the versions involved.
</pre>
<h3><a id="sec3.2">3.2</a> Uniform Resource Identifiers</h3>
<p>
   URIs have been known by many names: WWW addresses, Universal Document
   Identifiers, Universal Resource Identifiers [3], and finally the
   combination of Uniform Resource Locators (URL) <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib4">[4]</a> and Names (URN)
   <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib20">[20]</a>. As far as HTTP is concerned, Uniform Resource Identifiers are
   simply formatted strings which identify--via name, location, or any
   other characteristic--a resource.
</p>
<h3><a id="sec3.2.1">3.2.1</a> General Syntax</h3>
<p>
   URIs in HTTP can be represented in absolute form or relative to some
   known base URI [11], depending upon the context of their use. The two
   forms are differentiated by the fact that absolute URIs always begin
   with a scheme name followed by a colon. For definitive information on
   URL syntax and semantics, see "Uniform Resource Identifiers (URI):
   Generic Syntax and Semantics," RFC 2396 <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib42">[42]</a> (which replaces RFCs
   1738 <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib4">[4]</a> and RFC 1808 <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib11">[11]</a>). This specification adopts the
   definitions of "URI-reference", "absoluteURI", "relativeURI", "port",
   "host","abs_path", "rel_path", and "authority" from that
   specification.
</p>
<p>
   The HTTP protocol does not place any a priori limit on the length of
   a URI. Servers MUST be able to handle the URI of any resource they
   serve, and SHOULD be able to handle URIs of unbounded length if they
   provide GET-based forms that could generate such URIs. A server
   SHOULD return 414 (Request-URI Too Long) status if a URI is longer
   than the server can handle (see section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.15">10.4.15</a>).
</p>
<pre>      Note: Servers ought to be cautious about depending on URI lengths
      above 255 bytes, because some older client or proxy
      implementations might not properly support these lengths.
</pre>
<h3><a id="sec3.2.2">3.2.2</a> http URL</h3>
<p>
   The "http" scheme is used to locate network resources via the HTTP
   protocol. This section defines the scheme-specific syntax and
   semantics for http URLs.
</p>
<p>
   http_URL = "http:" "//" host [ ":" port ] [ abs_path [ "?" query ]]
</p>
<p>
   If the port is empty or not given, port 80 is assumed. The semantics
   are that the identified resource is located at the server listening
   for TCP connections on that port of that host, and the Request-URI
   for the resource is abs_path (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec5.html#sec5.1.2">5.1.2</a>). The use of IP addresses
   in URLs SHOULD be avoided whenever possible (see RFC 1900 <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib24">[24]</a>). If
   the abs_path is not present in the URL, it MUST be given as "/" when
   used as a Request-URI for a resource (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec5.html#sec5.1.2">5.1.2</a>). If a proxy
   receives a host name which is not a fully qualified domain name, it
   MAY add its domain to the host name it received. If a proxy receives
   a fully qualified domain name, the proxy MUST NOT change the host
   name.
</p>
<h3><a id="sec3.2.3">3.2.3</a> URI Comparison</h3>
<p>
   When comparing two URIs to decide if they match or not, a client
   SHOULD use a case-sensitive octet-by-octet comparison of the entire
   URIs, with these exceptions:
</p>
<pre>      - A port that is empty or not given is equivalent to the default
        port for that URI-reference;
</pre>
<pre>        - Comparisons of host names MUST be case-insensitive;
</pre>
<pre>        - Comparisons of scheme names MUST be case-insensitive;
</pre>
<pre>        - An empty abs_path is equivalent to an abs_path of "/".
</pre>
<p>
   Characters other than those in the "reserved" and "unsafe" sets (see
   RFC 2396 [42]) are equivalent to their ""%" HEX HEX" encoding.
</p>
<p>
   For example, the following three URIs are equivalent:
</p>
<pre>      http://abc.com:80/~smith/home.html
      http://ABC.com/%7Esmith/home.html
      http://ABC.com:/%7esmith/home.html
</pre>
<h3><a id="sec3.3">3.3</a> Date/Time Formats</h3>
<h3><a id="sec3.3.1">3.3.1</a> Full Date</h3>
<p>
   HTTP applications have historically allowed three different formats
   for the representation of date/time stamps:
</p>
<pre>      Sun, 06 Nov 1994 08:49:37 GMT  ; RFC 822, updated by RFC 1123
      Sunday, 06-Nov-94 08:49:37 GMT ; RFC 850, obsoleted by RFC 1036
      Sun Nov  6 08:49:37 1994       ; ANSI C's asctime() format
</pre>
<p>
   The first format is preferred as an Internet standard and represents
   a fixed-length subset of that defined by RFC 1123 [8] (an update to
   RFC 822 <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib9">[9]</a>). The second format is in common use, but is based on the
   obsolete RFC 850 <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib12">[12]</a> date format and lacks a four-digit year.
   HTTP/1.1 clients and servers that parse the date value MUST accept
   all three formats (for compatibility with HTTP/1.0), though they MUST
   only generate the RFC 1123 format for representing HTTP-date values
   in header fields. See section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.3">19.3</a> for further information.
</p>
<pre>      Note: Recipients of date values are encouraged to be robust in
      accepting date values that may have been sent by non-HTTP
      applications, as is sometimes the case when retrieving or posting
      messages via proxies/gateways to SMTP or NNTP.
</pre>
<p>
   All HTTP date/time stamps MUST be represented in Greenwich Mean Time
   (GMT), without exception. For the purposes of HTTP, GMT is exactly
   equal to UTC (Coordinated Universal Time). This is indicated in the
   first two formats by the inclusion of "GMT" as the three-letter
   abbreviation for time zone, and MUST be assumed when reading the
   asctime format. HTTP-date is case sensitive and MUST NOT include
   additional LWS beyond that specifically included as SP in the
   grammar.
</p>
<pre>       HTTP-date    = rfc1123-date | rfc850-date | asctime-date
       rfc1123-date = wkday "," SP date1 SP time SP "GMT"
       rfc850-date  = weekday "," SP date2 SP time SP "GMT"
       asctime-date = wkday SP date3 SP time SP 4DIGIT
       date1        = 2DIGIT SP month SP 4DIGIT
                      ; day month year (e.g., 02 Jun 1982)
       date2        = 2DIGIT "-" month "-" 2DIGIT
                      ; day-month-year (e.g., 02-Jun-82)
       date3        = month SP ( 2DIGIT | ( SP 1DIGIT ))
                      ; month day (e.g., Jun  2)
       time         = 2DIGIT ":" 2DIGIT ":" 2DIGIT
                      ; 00:00:00 - 23:59:59
       wkday        = "Mon" | "Tue" | "Wed"
                    | "Thu" | "Fri" | "Sat" | "Sun"
       weekday      = "Monday" | "Tuesday" | "Wednesday"
                    | "Thursday" | "Friday" | "Saturday" | "Sunday"
       month        = "Jan" | "Feb" | "Mar" | "Apr"
                    | "May" | "Jun" | "Jul" | "Aug"
                    | "Sep" | "Oct" | "Nov" | "Dec"
</pre>
<pre>      Note: HTTP requirements for the date/time stamp format apply only
      to their usage within the protocol stream. Clients and servers are
      not required to use these formats for user presentation, request
      logging, etc.
</pre>
<h3><a id="sec3.3.2">3.3.2</a> Delta Seconds</h3>
<p>
   Some HTTP header fields allow a time value to be specified as an
   integer number of seconds, represented in decimal, after the time
   that the message was received.
</p>
<pre>       delta-seconds  = 1*DIGIT
</pre>
<h3><a id="sec3.4">3.4</a> Character Sets</h3>
<p>
   HTTP uses the same definition of the term "character set" as that
   described for MIME:
</p>
<p>
   The term "character set" is used in this document to refer to a
   method used with one or more tables to convert a sequence of octets
   into a sequence of characters. Note that unconditional conversion in
   the other direction is not required, in that not all characters may
   be available in a given character set and a character set may provide
   more than one sequence of octets to represent a particular character.
   This definition is intended to allow various kinds of character
   encoding, from simple single-table mappings such as US-ASCII to
   complex table switching methods such as those that use ISO-2022's
   techniques. However, the definition associated with a MIME character
   set name MUST fully specify the mapping to be performed from octets
   to characters. In particular, use of external profiling information
   to determine the exact mapping is not permitted.
</p>
<pre>      Note: This use of the term "character set" is more commonly
      referred to as a "character encoding." However, since HTTP and
      MIME share the same registry, it is important that the terminology
      also be shared.
</pre>
<p>
   HTTP character sets are identified by case-insensitive tokens. The
   complete set of tokens is defined by the IANA Character Set registry
   <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib19">[19]</a>.
</p>
<pre>       charset = token
</pre>
<p>
   Although HTTP allows an arbitrary token to be used as a charset
   value, any token that has a predefined value within the IANA
   Character Set registry <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib19">[19]</a> MUST represent the character set defined
   by that registry. Applications SHOULD limit their use of character
   sets to those defined by the IANA registry.
</p>
<p>
   Implementors should be aware of IETF character set requirements <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib38">[38]</a>
   [41].
</p>
<h3><a id="sec3.4.1">3.4.1</a> Missing Charset</h3>
<p>
   Some HTTP/1.0 software has interpreted a Content-Type header without
   charset parameter incorrectly to mean "recipient should guess."
   Senders wishing to defeat this behavior MAY include a charset
   parameter even when the charset is ISO-8859-1 and SHOULD do so when
   it is known that it will not confuse the recipient.
</p>
<p>
   Unfortunately, some older HTTP/1.0 clients did not deal properly with
   an explicit charset parameter. HTTP/1.1 recipients MUST respect the
   charset label provided by the sender; and those user agents that have
   a provision to "guess" a charset MUST use the charset from the
</p>
<p>
   content-type field if they support that charset, rather than the
   recipient's preference, when initially displaying a document. See
   section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.7.1">3.7.1</a>.
</p>
<h3><a id="sec3.5">3.5</a> Content Codings</h3>
<p>
   Content coding values indicate an encoding transformation that has
   been or can be applied to an entity. Content codings are primarily
   used to allow a document to be compressed or otherwise usefully
   transformed without losing the identity of its underlying media type
   and without loss of information. Frequently, the entity is stored in
   coded form, transmitted directly, and only decoded by the recipient.
</p>
<pre>       content-coding   = token
</pre>
<p>
   All content-coding values are case-insensitive. HTTP/1.1 uses
   content-coding values in the Accept-Encoding (section 14.3) and
   Content-Encoding (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.11">14.11</a>) header fields. Although the value
   describes the content-coding, what is more important is that it
   indicates what decoding mechanism will be required to remove the
   encoding.
</p>
<p>
   The Internet Assigned Numbers Authority (IANA) acts as a registry for
   content-coding value tokens. Initially, the registry contains the
   following tokens:
</p>
<p>
   gzip An encoding format produced by the file compression program
        "gzip" (GNU zip) as described in RFC 1952 [25]. This format is a
        Lempel-Ziv coding (LZ77) with a 32 bit CRC.
</p>
<p>
   compress
        The encoding format produced by the common UNIX file compression
        program "compress". This format is an adaptive Lempel-Ziv-Welch
        coding (LZW).
</p>
<pre>        Use of program names for the identification of encoding formats
        is not desirable and is discouraged for future encodings. Their
        use here is representative of historical practice, not good
        design. For compatibility with previous implementations of HTTP,
        applications SHOULD consider "x-gzip" and "x-compress" to be
        equivalent to "gzip" and "compress" respectively.
</pre>
<p>
   deflate
        The "zlib" format defined in RFC 1950 [31] in combination with
        the "deflate" compression mechanism described in RFC 1951 <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib29">[29]</a>.
</p>
<p>
   identity
        The default (identity) encoding; the use of no transformation
        whatsoever. This content-coding is used only in the Accept-
        Encoding header, and SHOULD NOT be used in the Content-Encoding
        header.
</p>
<p>
   New content-coding value tokens SHOULD be registered; to allow
   interoperability between clients and servers, specifications of the
   content coding algorithms needed to implement a new value SHOULD be
   publicly available and adequate for independent implementation, and
   conform to the purpose of content coding defined in this section.
</p>
<h3><a id="sec3.6">3.6</a> Transfer Codings</h3>
<p>
   Transfer-coding values are used to indicate an encoding
   transformation that has been, can be, or may need to be applied to an
   entity-body in order to ensure "safe transport" through the network.
   This differs from a content coding in that the transfer-coding is a
   property of the message, not of the original entity.
</p>
<pre>       transfer-coding         = "chunked" | transfer-extension
       transfer-extension      = token *( ";" parameter )
</pre>
<p>
   Parameters are in  the form of attribute/value pairs.
</p>
<pre>       parameter               = attribute "=" value
       attribute               = token
       value                   = token | quoted-string
</pre>
<p>
   All transfer-coding values are case-insensitive. HTTP/1.1 uses
   transfer-coding values in the TE header field (section 14.39) and in
   the Transfer-Encoding header field (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.41">14.41</a>).
</p>
<p>
   Whenever a transfer-coding is applied to a message-body, the set of
   transfer-codings MUST include "chunked", unless the message is
   terminated by closing the connection. When the "chunked" transfer-
   coding is used, it MUST be the last transfer-coding applied to the
   message-body. The "chunked" transfer-coding MUST NOT be applied more
   than once to a message-body. These rules allow the recipient to
   determine the transfer-length of the message (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.4">4.4</a>).
</p>
<p>
   Transfer-codings are analogous to the Content-Transfer-Encoding
   values of MIME [7], which were designed to enable safe transport of
   binary data over a 7-bit transport service. However, safe transport
   has a different focus for an 8bit-clean transfer protocol. In HTTP,
   the only unsafe characteristic of message-bodies is the difficulty in
   determining the exact body length (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec7.html#sec7.2.2">7.2.2</a>), or the desire to
   encrypt data over a shared transport.
</p>
<p>
   The Internet Assigned Numbers Authority (IANA) acts as a registry for
   transfer-coding value tokens. Initially, the registry contains the
   following tokens: "chunked" (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.6.1">3.6.1</a>), "identity" (section
   <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.6.2">3.6.2</a>), "gzip" (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.5">3.5</a>), "compress" (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.5">3.5</a>), and "deflate"
   (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.5">3.5</a>).
</p>
<p>
   New transfer-coding value tokens SHOULD be registered in the same way
   as new content-coding value tokens (section 3.5).
</p>
<p>
   A server which receives an entity-body with a transfer-coding it does
   not understand SHOULD return 501 (Unimplemented), and close the
   connection. A server MUST NOT send transfer-codings to an HTTP/1.0
   client.
</p>
<h3><a id="sec3.6.1">3.6.1</a> Chunked Transfer Coding</h3>
<p>
   The chunked encoding modifies the body of a message in order to
   transfer it as a series of chunks, each with its own size indicator,
   followed by an OPTIONAL trailer containing entity-header fields. This
   allows dynamically produced content to be transferred along with the
   information necessary for the recipient to verify that it has
   received the full message.
</p>
<pre>       Chunked-Body   = *chunk
                        last-chunk
                        trailer
                        CRLF
</pre>
<pre>       chunk          = chunk-size [ chunk-extension ] CRLF
                        chunk-data CRLF
       chunk-size     = 1*HEX
       last-chunk     = 1*("0") [ chunk-extension ] CRLF
</pre>
<pre>       chunk-extension= *( ";" chunk-ext-name [ "=" chunk-ext-val ] )
       chunk-ext-name = token
       chunk-ext-val  = token | quoted-string
       chunk-data     = chunk-size(OCTET)
       trailer        = *(entity-header CRLF)
</pre>
<p>
   The chunk-size field is a string of hex digits indicating the size of
   the chunk. The chunked encoding is ended by any chunk whose size is
   zero, followed by the trailer, which is terminated by an empty line.
</p>
<p>
   The trailer allows the sender to include additional HTTP header
   fields at the end of the message. The Trailer header field can be
   used to indicate which header fields are included in a trailer (see
   section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.40">14.40</a>).
</p>
<p>
   A server using chunked transfer-coding in a response MUST NOT use the
   trailer for any header fields unless at least one of the following is
   true:
</p>
<p>
   a)the request included a TE header field that indicates "trailers" is
     acceptable in the transfer-coding of the  response, as described in
     section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.39">14.39</a>; or,
</p>
<p>
   b)the server is the origin server for the response, the trailer
     fields consist entirely of optional metadata, and the recipient
     could use the message (in a manner acceptable to the origin server)
     without receiving this metadata.  In other words, the origin server
     is willing to accept the possibility that the trailer fields might
     be silently discarded along the path to the client.
</p>
<p>
   This requirement prevents an interoperability failure when the
   message is being received by an HTTP/1.1 (or later) proxy and
   forwarded to an HTTP/1.0 recipient. It avoids a situation where
   compliance with the protocol would have necessitated a possibly
   infinite buffer on the proxy.
</p>
<p>
   An example process for decoding a Chunked-Body is presented in
   appendix 19.4.6.
</p>
<p>
   All HTTP/1.1 applications MUST be able to receive and decode the
   "chunked" transfer-coding, and MUST ignore chunk-extension extensions
   they do not understand.
</p>
<h3><a id="sec3.7">3.7</a> Media Types</h3>
<p>
   HTTP uses Internet Media Types <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib17">[17]</a> in the Content-Type (section
   14.17) and Accept (section 14.1) header fields in order to provide
   open and extensible data typing and type negotiation.
</p>
<pre>       media-type     = type "/" subtype *( ";" parameter )
       type           = token
       subtype        = token
</pre>
<p>
   Parameters MAY follow the type/subtype in the form of attribute/value
   pairs (as defined in section 3.6).
</p>
<p>
   The type, subtype, and parameter attribute names are case-
   insensitive. Parameter values might or might not be case-sensitive,
   depending on the semantics of the parameter name. Linear white space
   (LWS) MUST NOT be used between the type and subtype, nor between an
   attribute and its value. The presence or absence of a parameter might
   be significant to the processing of a media-type, depending on its
   definition within the media type registry.
</p>
<p>
   Note that some older HTTP applications do not recognize media type
   parameters. When sending data to older HTTP applications,
   implementations SHOULD only use media type parameters when they are
   required by that type/subtype definition.
</p>
<p>
   Media-type values are registered with the Internet Assigned Number
   Authority (IANA [19]). The media type registration process is
   outlined in RFC 1590 <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib17">[17]</a>. Use of non-registered media types is
   discouraged.
</p>
<h3><a id="sec3.7.1">3.7.1</a> Canonicalization and Text Defaults</h3>
<p>
   Internet media types are registered with a canonical form. An
   entity-body transferred via HTTP messages MUST be represented in the
   appropriate canonical form prior to its transmission except for
   "text" types, as defined in the next paragraph.
</p>
<p>
   When in canonical form, media subtypes of the "text" type use CRLF as
   the text line break. HTTP relaxes this requirement and allows the
   transport of text media with plain CR or LF alone representing a line
   break when it is done consistently for an entire entity-body. HTTP
   applications MUST accept CRLF, bare CR, and bare LF as being
   representative of a line break in text media received via HTTP. In
   addition, if the text is represented in a character set that does not
   use octets 13 and 10 for CR and LF respectively, as is the case for
   some multi-byte character sets, HTTP allows the use of whatever octet
   sequences are defined by that character set to represent the
   equivalent of CR and LF for line breaks. This flexibility regarding
   line breaks applies only to text media in the entity-body; a bare CR
   or LF MUST NOT be substituted for CRLF within any of the HTTP control
   structures (such as header fields and multipart boundaries).
</p>
<p>
   If an entity-body is encoded with a content-coding, the underlying
   data MUST be in a form defined above prior to being encoded.
</p>
<p>
   The "charset" parameter is used with some media types to define the
   character set (section 3.4) of the data. When no explicit charset
   parameter is provided by the sender, media subtypes of the "text"
   type are defined to have a default charset value of "ISO-8859-1" when
   received via HTTP. Data in character sets other than "ISO-8859-1" or
   its subsets MUST be labeled with an appropriate charset value. See
   section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.4.1">3.4.1</a> for compatibility problems.
</p>
<h3><a id="sec3.7.2">3.7.2</a> Multipart Types</h3>
<p>
   MIME provides for a number of "multipart" types -- encapsulations of
   one or more entities within a single message-body. All multipart
   types share a common syntax, as defined in section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec5.html#sec5.1.1">5.1.1</a> of RFC 2046
</p>
<p>
   <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib40">[40]</a>, and MUST include a boundary parameter as part of the media type
   value. The message body is itself a protocol element and MUST
   therefore use only CRLF to represent line breaks between body-parts.
   Unlike in RFC 2046, the epilogue of any multipart message MUST be
   empty; HTTP applications MUST NOT transmit the epilogue (even if the
   original multipart contains an epilogue). These restrictions exist in
   order to preserve the self-delimiting nature of a multipart message-
   body, wherein the "end" of the message-body is indicated by the
   ending multipart boundary.
</p>
<p>
   In general, HTTP treats a multipart message-body no differently than
   any other media type: strictly as payload. The one exception is the
   "multipart/byteranges" type (appendix <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.2">19.2</a>) when it appears in a 206
   (Partial Content) response, which will be interpreted by some HTTP
   caching mechanisms as described in sections <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html#sec13.5.4">13.5.4</a> and <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16">14.16</a>. In all
   other cases, an HTTP user agent SHOULD follow the same or similar
   behavior as a MIME user agent would upon receipt of a multipart type.
   The MIME header fields within each body-part of a multipart message-
   body do not have any significance to HTTP beyond that defined by
   their MIME semantics.
</p>
<p>
   In general, an HTTP user agent SHOULD follow the same or similar
   behavior as a MIME user agent would upon receipt of a multipart type.
   If an application receives an unrecognized multipart subtype, the
   application MUST treat it as being equivalent to "multipart/mixed".
</p>
<pre>      Note: The "multipart/form-data" type has been specifically defined
      for carrying form data suitable for processing via the POST
      request method, as described in RFC 1867 <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib15">[15]</a>.
</pre>
<h3><a id="sec3.8">3.8</a> Product Tokens</h3>
<p>
   Product tokens are used to allow communicating applications to
   identify themselves by software name and version. Most fields using
   product tokens also allow sub-products which form a significant part
   of the application to be listed, separated by white space. By
   convention, the products are listed in order of their significance
   for identifying the application.
</p>
<pre>       product         = token ["/" product-version]
       product-version = token
</pre>
<p>
   Examples:
</p>
<pre>       User-Agent: CERN-LineMode/2.15 libwww/2.17b3
       Server: Apache/0.8.4
</pre>
<p>
   Product tokens SHOULD be short and to the point. They MUST NOT be
   used for advertising or other non-essential information. Although any
   token character MAY appear in a product-version, this token SHOULD
   only be used for a version identifier (i.e., successive versions of
   the same product SHOULD only differ in the product-version portion of
   the product value).
</p>
<h3><a id="sec3.9">3.9</a> Quality Values</h3>
<p>
   HTTP content negotiation (section 12) uses short "floating point"
   numbers to indicate the relative importance ("weight") of various
   negotiable parameters.  A weight is normalized to a real number in
   the range 0 through 1, where 0 is the minimum and 1 the maximum
   value. If a parameter has a quality value of 0, then content with
   this parameter is `not acceptable' for the client. HTTP/1.1
   applications MUST NOT generate more than three digits after the
   decimal point. User configuration of these values SHOULD also be
   limited in this fashion.
</p>
<pre>       qvalue         = ( "0" [ "." 0*3DIGIT ] )
                      | ( "1" [ "." 0*3("0") ] )
</pre>
<p>
   "Quality values" is a misnomer, since these values merely represent
   relative degradation in desired quality.
</p>
<h3><a id="sec3.10">3.10</a> Language Tags</h3>
<p>
   A language tag identifies a natural language spoken, written, or
   otherwise conveyed by human beings for communication of information
   to other human beings. Computer languages are explicitly excluded.
   HTTP uses language tags within the Accept-Language and Content-
   Language fields.
</p>
<p>
   The syntax and registry of HTTP language tags is the same as that
   defined by RFC 1766 [1]. In summary, a language tag is composed of 1
   or more parts: A primary language tag and a possibly empty series of
   subtags:
</p>
<pre>        language-tag  = primary-tag *( "-" subtag )
        primary-tag   = 1*8ALPHA
        subtag        = 1*8ALPHA
</pre>
<p>
   White space is not allowed within the tag and all tags are case-
   insensitive. The name space of language tags is administered by the
   IANA. Example tags include:
</p>
<pre>       en, en-US, en-cockney, i-cherokee, x-pig-latin
</pre>
<p>
   where any two-letter primary-tag is an ISO-639 language abbreviation
   and any two-letter initial subtag is an ISO-3166 country code. (The
   last three tags above are not registered tags; all but the last are
   examples of tags which could be registered in future.)
</p>
<h3><a id="sec3.11">3.11</a> Entity Tags</h3>
<p>
   Entity tags are used for comparing two or more entities from the same
   requested resource. HTTP/1.1 uses entity tags in the ETag (section
   <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.19">14.19</a>), If-Match (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.24">14.24</a>), If-None-Match (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.26">14.26</a>), and
   If-Range (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.27">14.27</a>) header fields. The definition of how they
   are used and compared as cache validators is in section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html#sec13.3.3">13.3.3</a>. An
   entity tag consists of an opaque quoted string, possibly prefixed by
   a weakness indicator.
</p>
<pre>      entity-tag = [ weak ] opaque-tag
      weak       = "W/"
      opaque-tag = quoted-string
</pre>
<p>
   A "strong entity tag" MAY be shared by two entities of a resource
   only if they are equivalent by octet equality.
</p>
<p>
   A "weak entity tag," indicated by the "W/" prefix, MAY be shared by
   two entities of a resource only if the entities are equivalent and
   could be substituted for each other with no significant change in
   semantics. A weak entity tag can only be used for weak comparison.
</p>
<p>
   An entity tag MUST be unique across all versions of all entities
   associated with a particular resource. A given entity tag value MAY
   be used for entities obtained by requests on different URIs. The use
   of the same entity tag value in conjunction with entities obtained by
   requests on different URIs does not imply the equivalence of those
   entities.
</p>
<h3><a id="sec3.12">3.12</a> Range Units</h3>
<p>
   HTTP/1.1 allows a client to request that only part (a range of) the
   response entity be included within the response. HTTP/1.1 uses range
   units in the Range (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35">14.35</a>) and Content-Range (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16">14.16</a>)
   header fields. An entity can be broken down into subranges according
   to various structural units.
</p>
<pre>      range-unit       = bytes-unit | other-range-unit
      bytes-unit       = "bytes"
      other-range-unit = token
</pre>
<p>
   The only range unit defined by HTTP/1.1 is "bytes". HTTP/1.1
   implementations MAY ignore ranges specified using other units.
</p>
<p>
   HTTP/1.1 has been designed to allow implementations of applications
   that do not depend on knowledge of ranges.
</p>
</body></html>
"""
Transfered bytes: 36449
From cache.
Executed in thread 'Hilo (5)'.

Date: Mon, 27 Sep 2010 06:50:33 
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 06:50:33 
"""
Transfered bytes: 85
From .
Executed in thread 'Hilo (6)'.

Date: Mon, 27 Sep 2010 06:50:40 
IP: 127.0.0.1
URL requested:html/rfc2616-sec%203.html
Sended code: """HTTP/1.1 404
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 06:50:40 
"""
Transfered bytes: 85
From .
Executed in thread 'Hilo (7)'.

Date: Mon, 27 Sep 2010 06:51:47 
IP: 127.0.0.1
URL requested:html/rfc2616-sec%203.html
Sended code: """HTTP/1.1 404
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 06:51:47 
"""
Transfered bytes: 85
From .
Executed in thread 'Hilo (8)'.

Date: Mon, 27 Sep 2010 06:51:48 
IP: 127.0.0.1
URL requested:html/rfc2616-sec%203.html
Sended code: """HTTP/1.1 404
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 06:51:48 
"""
Transfered bytes: 85
From .
Executed in thread 'Hilo (9)'.

Date: Mon, 27 Sep 2010 06:51:48 
IP: 127.0.0.1
URL requested:html/rfc2616-sec%203.html
Sended code: """HTTP/1.1 404
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 06:51:48 
"""
Transfered bytes: 85
From .
Executed in thread 'Hilo (10)'.

Date: Mon, 27 Sep 2010 06:51:56 
IP: 127.0.0.1
URL requested:html/rfc2616-sec%203.html
Sended code: """HTTP/1.1 404
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 06:51:56 
Content-Type: text/html
Content-Length: 0


"""
Transfered bytes: 129
From .
Executed in thread 'Hilo (1)'.

Date: Mon, 27 Sep 2010 06:51:56 
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 06:51:56 
Content-Type: text/html
Content-Length: 0


"""
Transfered bytes: 129
From .
Executed in thread 'Hilo (2)'.

Date: Mon, 27 Sep 2010 06:52:14 
IP: 127.0.0.1
URL requested:html/rfc2616-sec%203.html
Sended code: """HTTP/1.1 404
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 06:52:14 
Content-Type: text/html
Content-Length: 0


"""
Transfered bytes: 129
From .
Executed in thread 'Hilo (3)'.

Date: Mon, 27 Sep 2010 06:52:21 
IP: 127.0.0.1
URL requested:html/rfc2616-sec%203.html
Sended code: """HTTP/1.1 404
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 06:52:21 
Content-Type: text/html
Content-Length: 0


"""
Transfered bytes: 129
From .
Executed in thread 'Hilo (4)'.

Date: Mon, 27 Sep 2010 06:57:18 
IP: 127.0.0.1
URL requested:html/rfc2616-sec%203.html
Sended code: """HTTP/1.1 404
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 06:57:18 
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 251
From .
Executed in thread 'Hilo (1)'.

Date: Mon, 27 Sep 2010 06:59:10 
IP: 127.0.0.1
URL requested:html/rfc2616-sec%203.html
Sended code: """HTTP/1.1 404
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 06:59:10 
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 251
From .
Executed in thread 'Hilo (2)'.

Date: Mon, 27 Sep 2010 06:59:10 
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 06:59:10 
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 251
From .
Executed in thread 'Hilo (3)'.

Date: Mon, 27 Sep 2010 07:03:55 
IP: 127.0.0.1
URL requested:html/rfc2616-sec%203.html
Sended code: """HTTP/1.1 404
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:03:55 
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 251
From .
Executed in thread 'Hilo (1)'.

Date: Mon, 27 Sep 2010 07:04:01 
IP: 127.0.0.1
URL requested:html/rfc2616-sec%203.html
Sended code: """HTTP/1.1 404
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:04:01 
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 251
From .
Executed in thread 'Hilo (2)'.

Date: Mon, 27 Sep 2010 07:04:06 
IP: 127.0.0.1
URL requested:html/rfc2616-sec3.html
Sended code: """HTTP/1.1 
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:04:06 
Content-Type: text/html
Content-Length: 36319

<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head>
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">

<title>HTTP/1.1: Protocol Parameters</title></head><body><address>part of <a rev="Section" href="http://www.w3.org/Protocols/rfc2616/rfc2616.html">Hypertext Transfer Protocol -- HTTP/1.1</a><br>
RFC 2616 Fielding, et al.</address>
<h2><a id="sec3">3</a> Protocol Parameters</h2>
<h3><a id="sec3.1">3.1</a> HTTP Version</h3>
<p>
   HTTP uses a "&lt;major&gt;.&lt;minor&gt;" numbering scheme to indicate versions
   of the protocol. The protocol versioning policy is intended to allow
   the sender to indicate the format of a message and its capacity for
   understanding further HTTP communication, rather than the features
   obtained via that communication. No change is made to the version
   number for the addition of message components which do not affect
   communication behavior or which only add to extensible field values.
   The &lt;minor&gt; number is incremented when the changes made to the
   protocol add features which do not change the general message parsing
   algorithm, but which may add to the message semantics and imply
   additional capabilities of the sender. The &lt;major&gt; number is
   incremented when the format of a message within the protocol is
   changed. See RFC 2145 <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib36">[36]</a> for a fuller explanation.
</p>
<p>
   The version of an HTTP message is indicated by an HTTP-Version field
   in the first line of the message.
</p>
<pre>       HTTP-Version   = "HTTP" "/" 1*DIGIT "." 1*DIGIT
</pre>
<p>
   Note that the major and minor numbers MUST be treated as separate
   integers and that each MAY be incremented higher than a single digit.
   Thus, HTTP/2.4 is a lower version than HTTP/2.13, which in turn is
   lower than HTTP/12.3. Leading zeros MUST be ignored by recipients and
   MUST NOT be sent.
</p>
<p>
   An application that sends a request or response message that includes
   HTTP-Version of "HTTP/1.1" MUST be at least conditionally compliant
   with this specification. Applications that are at least conditionally
   compliant with this specification SHOULD use an HTTP-Version of
   "HTTP/1.1" in their messages, and MUST do so for any message that is
   not compatible with HTTP/1.0. For more details on when to send
   specific HTTP-Version values, see RFC 2145 <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib36">[36]</a>.
</p>
<p>
   The HTTP version of an application is the highest HTTP version for
   which the application is at least conditionally compliant.
</p>
<p>
   Proxy and gateway applications need to be careful when forwarding
   messages in protocol versions different from that of the application.
   Since the protocol version indicates the protocol capability of the
   sender, a proxy/gateway MUST NOT send a message with a version
   indicator which is greater than its actual version. If a higher
   version request is received, the proxy/gateway MUST either downgrade
   the request version, or respond with an error, or switch to tunnel
   behavior.
</p>
<p>
   Due to interoperability problems with HTTP/1.0 proxies discovered
   since the publication of RFC 2068[33], caching proxies MUST, gateways
   MAY, and tunnels MUST NOT upgrade the request to the highest version
   they support. The proxy/gateway's response to that request MUST be in
   the same major version as the request.
</p>
<pre>      Note: Converting between versions of HTTP may involve modification
      of header fields required or forbidden by the versions involved.
</pre>
<h3><a id="sec3.2">3.2</a> Uniform Resource Identifiers</h3>
<p>
   URIs have been known by many names: WWW addresses, Universal Document
   Identifiers, Universal Resource Identifiers [3], and finally the
   combination of Uniform Resource Locators (URL) <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib4">[4]</a> and Names (URN)
   <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib20">[20]</a>. As far as HTTP is concerned, Uniform Resource Identifiers are
   simply formatted strings which identify--via name, location, or any
   other characteristic--a resource.
</p>
<h3><a id="sec3.2.1">3.2.1</a> General Syntax</h3>
<p>
   URIs in HTTP can be represented in absolute form or relative to some
   known base URI [11], depending upon the context of their use. The two
   forms are differentiated by the fact that absolute URIs always begin
   with a scheme name followed by a colon. For definitive information on
   URL syntax and semantics, see "Uniform Resource Identifiers (URI):
   Generic Syntax and Semantics," RFC 2396 <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib42">[42]</a> (which replaces RFCs
   1738 <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib4">[4]</a> and RFC 1808 <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib11">[11]</a>). This specification adopts the
   definitions of "URI-reference", "absoluteURI", "relativeURI", "port",
   "host","abs_path", "rel_path", and "authority" from that
   specification.
</p>
<p>
   The HTTP protocol does not place any a priori limit on the length of
   a URI. Servers MUST be able to handle the URI of any resource they
   serve, and SHOULD be able to handle URIs of unbounded length if they
   provide GET-based forms that could generate such URIs. A server
   SHOULD return 414 (Request-URI Too Long) status if a URI is longer
   than the server can handle (see section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.15">10.4.15</a>).
</p>
<pre>      Note: Servers ought to be cautious about depending on URI lengths
      above 255 bytes, because some older client or proxy
      implementations might not properly support these lengths.
</pre>
<h3><a id="sec3.2.2">3.2.2</a> http URL</h3>
<p>
   The "http" scheme is used to locate network resources via the HTTP
   protocol. This section defines the scheme-specific syntax and
   semantics for http URLs.
</p>
<p>
   http_URL = "http:" "//" host [ ":" port ] [ abs_path [ "?" query ]]
</p>
<p>
   If the port is empty or not given, port 80 is assumed. The semantics
   are that the identified resource is located at the server listening
   for TCP connections on that port of that host, and the Request-URI
   for the resource is abs_path (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec5.html#sec5.1.2">5.1.2</a>). The use of IP addresses
   in URLs SHOULD be avoided whenever possible (see RFC 1900 <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib24">[24]</a>). If
   the abs_path is not present in the URL, it MUST be given as "/" when
   used as a Request-URI for a resource (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec5.html#sec5.1.2">5.1.2</a>). If a proxy
   receives a host name which is not a fully qualified domain name, it
   MAY add its domain to the host name it received. If a proxy receives
   a fully qualified domain name, the proxy MUST NOT change the host
   name.
</p>
<h3><a id="sec3.2.3">3.2.3</a> URI Comparison</h3>
<p>
   When comparing two URIs to decide if they match or not, a client
   SHOULD use a case-sensitive octet-by-octet comparison of the entire
   URIs, with these exceptions:
</p>
<pre>      - A port that is empty or not given is equivalent to the default
        port for that URI-reference;
</pre>
<pre>        - Comparisons of host names MUST be case-insensitive;
</pre>
<pre>        - Comparisons of scheme names MUST be case-insensitive;
</pre>
<pre>        - An empty abs_path is equivalent to an abs_path of "/".
</pre>
<p>
   Characters other than those in the "reserved" and "unsafe" sets (see
   RFC 2396 [42]) are equivalent to their ""%" HEX HEX" encoding.
</p>
<p>
   For example, the following three URIs are equivalent:
</p>
<pre>      http://abc.com:80/~smith/home.html
      http://ABC.com/%7Esmith/home.html
      http://ABC.com:/%7esmith/home.html
</pre>
<h3><a id="sec3.3">3.3</a> Date/Time Formats</h3>
<h3><a id="sec3.3.1">3.3.1</a> Full Date</h3>
<p>
   HTTP applications have historically allowed three different formats
   for the representation of date/time stamps:
</p>
<pre>      Sun, 06 Nov 1994 08:49:37 GMT  ; RFC 822, updated by RFC 1123
      Sunday, 06-Nov-94 08:49:37 GMT ; RFC 850, obsoleted by RFC 1036
      Sun Nov  6 08:49:37 1994       ; ANSI C's asctime() format
</pre>
<p>
   The first format is preferred as an Internet standard and represents
   a fixed-length subset of that defined by RFC 1123 [8] (an update to
   RFC 822 <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib9">[9]</a>). The second format is in common use, but is based on the
   obsolete RFC 850 <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib12">[12]</a> date format and lacks a four-digit year.
   HTTP/1.1 clients and servers that parse the date value MUST accept
   all three formats (for compatibility with HTTP/1.0), though they MUST
   only generate the RFC 1123 format for representing HTTP-date values
   in header fields. See section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.3">19.3</a> for further information.
</p>
<pre>      Note: Recipients of date values are encouraged to be robust in
      accepting date values that may have been sent by non-HTTP
      applications, as is sometimes the case when retrieving or posting
      messages via proxies/gateways to SMTP or NNTP.
</pre>
<p>
   All HTTP date/time stamps MUST be represented in Greenwich Mean Time
   (GMT), without exception. For the purposes of HTTP, GMT is exactly
   equal to UTC (Coordinated Universal Time). This is indicated in the
   first two formats by the inclusion of "GMT" as the three-letter
   abbreviation for time zone, and MUST be assumed when reading the
   asctime format. HTTP-date is case sensitive and MUST NOT include
   additional LWS beyond that specifically included as SP in the
   grammar.
</p>
<pre>       HTTP-date    = rfc1123-date | rfc850-date | asctime-date
       rfc1123-date = wkday "," SP date1 SP time SP "GMT"
       rfc850-date  = weekday "," SP date2 SP time SP "GMT"
       asctime-date = wkday SP date3 SP time SP 4DIGIT
       date1        = 2DIGIT SP month SP 4DIGIT
                      ; day month year (e.g., 02 Jun 1982)
       date2        = 2DIGIT "-" month "-" 2DIGIT
                      ; day-month-year (e.g., 02-Jun-82)
       date3        = month SP ( 2DIGIT | ( SP 1DIGIT ))
                      ; month day (e.g., Jun  2)
       time         = 2DIGIT ":" 2DIGIT ":" 2DIGIT
                      ; 00:00:00 - 23:59:59
       wkday        = "Mon" | "Tue" | "Wed"
                    | "Thu" | "Fri" | "Sat" | "Sun"
       weekday      = "Monday" | "Tuesday" | "Wednesday"
                    | "Thursday" | "Friday" | "Saturday" | "Sunday"
       month        = "Jan" | "Feb" | "Mar" | "Apr"
                    | "May" | "Jun" | "Jul" | "Aug"
                    | "Sep" | "Oct" | "Nov" | "Dec"
</pre>
<pre>      Note: HTTP requirements for the date/time stamp format apply only
      to their usage within the protocol stream. Clients and servers are
      not required to use these formats for user presentation, request
      logging, etc.
</pre>
<h3><a id="sec3.3.2">3.3.2</a> Delta Seconds</h3>
<p>
   Some HTTP header fields allow a time value to be specified as an
   integer number of seconds, represented in decimal, after the time
   that the message was received.
</p>
<pre>       delta-seconds  = 1*DIGIT
</pre>
<h3><a id="sec3.4">3.4</a> Character Sets</h3>
<p>
   HTTP uses the same definition of the term "character set" as that
   described for MIME:
</p>
<p>
   The term "character set" is used in this document to refer to a
   method used with one or more tables to convert a sequence of octets
   into a sequence of characters. Note that unconditional conversion in
   the other direction is not required, in that not all characters may
   be available in a given character set and a character set may provide
   more than one sequence of octets to represent a particular character.
   This definition is intended to allow various kinds of character
   encoding, from simple single-table mappings such as US-ASCII to
   complex table switching methods such as those that use ISO-2022's
   techniques. However, the definition associated with a MIME character
   set name MUST fully specify the mapping to be performed from octets
   to characters. In particular, use of external profiling information
   to determine the exact mapping is not permitted.
</p>
<pre>      Note: This use of the term "character set" is more commonly
      referred to as a "character encoding." However, since HTTP and
      MIME share the same registry, it is important that the terminology
      also be shared.
</pre>
<p>
   HTTP character sets are identified by case-insensitive tokens. The
   complete set of tokens is defined by the IANA Character Set registry
   <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib19">[19]</a>.
</p>
<pre>       charset = token
</pre>
<p>
   Although HTTP allows an arbitrary token to be used as a charset
   value, any token that has a predefined value within the IANA
   Character Set registry <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib19">[19]</a> MUST represent the character set defined
   by that registry. Applications SHOULD limit their use of character
   sets to those defined by the IANA registry.
</p>
<p>
   Implementors should be aware of IETF character set requirements <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib38">[38]</a>
   [41].
</p>
<h3><a id="sec3.4.1">3.4.1</a> Missing Charset</h3>
<p>
   Some HTTP/1.0 software has interpreted a Content-Type header without
   charset parameter incorrectly to mean "recipient should guess."
   Senders wishing to defeat this behavior MAY include a charset
   parameter even when the charset is ISO-8859-1 and SHOULD do so when
   it is known that it will not confuse the recipient.
</p>
<p>
   Unfortunately, some older HTTP/1.0 clients did not deal properly with
   an explicit charset parameter. HTTP/1.1 recipients MUST respect the
   charset label provided by the sender; and those user agents that have
   a provision to "guess" a charset MUST use the charset from the
</p>
<p>
   content-type field if they support that charset, rather than the
   recipient's preference, when initially displaying a document. See
   section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.7.1">3.7.1</a>.
</p>
<h3><a id="sec3.5">3.5</a> Content Codings</h3>
<p>
   Content coding values indicate an encoding transformation that has
   been or can be applied to an entity. Content codings are primarily
   used to allow a document to be compressed or otherwise usefully
   transformed without losing the identity of its underlying media type
   and without loss of information. Frequently, the entity is stored in
   coded form, transmitted directly, and only decoded by the recipient.
</p>
<pre>       content-coding   = token
</pre>
<p>
   All content-coding values are case-insensitive. HTTP/1.1 uses
   content-coding values in the Accept-Encoding (section 14.3) and
   Content-Encoding (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.11">14.11</a>) header fields. Although the value
   describes the content-coding, what is more important is that it
   indicates what decoding mechanism will be required to remove the
   encoding.
</p>
<p>
   The Internet Assigned Numbers Authority (IANA) acts as a registry for
   content-coding value tokens. Initially, the registry contains the
   following tokens:
</p>
<p>
   gzip An encoding format produced by the file compression program
        "gzip" (GNU zip) as described in RFC 1952 [25]. This format is a
        Lempel-Ziv coding (LZ77) with a 32 bit CRC.
</p>
<p>
   compress
        The encoding format produced by the common UNIX file compression
        program "compress". This format is an adaptive Lempel-Ziv-Welch
        coding (LZW).
</p>
<pre>        Use of program names for the identification of encoding formats
        is not desirable and is discouraged for future encodings. Their
        use here is representative of historical practice, not good
        design. For compatibility with previous implementations of HTTP,
        applications SHOULD consider "x-gzip" and "x-compress" to be
        equivalent to "gzip" and "compress" respectively.
</pre>
<p>
   deflate
        The "zlib" format defined in RFC 1950 [31] in combination with
        the "deflate" compression mechanism described in RFC 1951 <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib29">[29]</a>.
</p>
<p>
   identity
        The default (identity) encoding; the use of no transformation
        whatsoever. This content-coding is used only in the Accept-
        Encoding header, and SHOULD NOT be used in the Content-Encoding
        header.
</p>
<p>
   New content-coding value tokens SHOULD be registered; to allow
   interoperability between clients and servers, specifications of the
   content coding algorithms needed to implement a new value SHOULD be
   publicly available and adequate for independent implementation, and
   conform to the purpose of content coding defined in this section.
</p>
<h3><a id="sec3.6">3.6</a> Transfer Codings</h3>
<p>
   Transfer-coding values are used to indicate an encoding
   transformation that has been, can be, or may need to be applied to an
   entity-body in order to ensure "safe transport" through the network.
   This differs from a content coding in that the transfer-coding is a
   property of the message, not of the original entity.
</p>
<pre>       transfer-coding         = "chunked" | transfer-extension
       transfer-extension      = token *( ";" parameter )
</pre>
<p>
   Parameters are in  the form of attribute/value pairs.
</p>
<pre>       parameter               = attribute "=" value
       attribute               = token
       value                   = token | quoted-string
</pre>
<p>
   All transfer-coding values are case-insensitive. HTTP/1.1 uses
   transfer-coding values in the TE header field (section 14.39) and in
   the Transfer-Encoding header field (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.41">14.41</a>).
</p>
<p>
   Whenever a transfer-coding is applied to a message-body, the set of
   transfer-codings MUST include "chunked", unless the message is
   terminated by closing the connection. When the "chunked" transfer-
   coding is used, it MUST be the last transfer-coding applied to the
   message-body. The "chunked" transfer-coding MUST NOT be applied more
   than once to a message-body. These rules allow the recipient to
   determine the transfer-length of the message (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.4">4.4</a>).
</p>
<p>
   Transfer-codings are analogous to the Content-Transfer-Encoding
   values of MIME [7], which were designed to enable safe transport of
   binary data over a 7-bit transport service. However, safe transport
   has a different focus for an 8bit-clean transfer protocol. In HTTP,
   the only unsafe characteristic of message-bodies is the difficulty in
   determining the exact body length (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec7.html#sec7.2.2">7.2.2</a>), or the desire to
   encrypt data over a shared transport.
</p>
<p>
   The Internet Assigned Numbers Authority (IANA) acts as a registry for
   transfer-coding value tokens. Initially, the registry contains the
   following tokens: "chunked" (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.6.1">3.6.1</a>), "identity" (section
   <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.6.2">3.6.2</a>), "gzip" (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.5">3.5</a>), "compress" (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.5">3.5</a>), and "deflate"
   (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.5">3.5</a>).
</p>
<p>
   New transfer-coding value tokens SHOULD be registered in the same way
   as new content-coding value tokens (section 3.5).
</p>
<p>
   A server which receives an entity-body with a transfer-coding it does
   not understand SHOULD return 501 (Unimplemented), and close the
   connection. A server MUST NOT send transfer-codings to an HTTP/1.0
   client.
</p>
<h3><a id="sec3.6.1">3.6.1</a> Chunked Transfer Coding</h3>
<p>
   The chunked encoding modifies the body of a message in order to
   transfer it as a series of chunks, each with its own size indicator,
   followed by an OPTIONAL trailer containing entity-header fields. This
   allows dynamically produced content to be transferred along with the
   information necessary for the recipient to verify that it has
   received the full message.
</p>
<pre>       Chunked-Body   = *chunk
                        last-chunk
                        trailer
                        CRLF
</pre>
<pre>       chunk          = chunk-size [ chunk-extension ] CRLF
                        chunk-data CRLF
       chunk-size     = 1*HEX
       last-chunk     = 1*("0") [ chunk-extension ] CRLF
</pre>
<pre>       chunk-extension= *( ";" chunk-ext-name [ "=" chunk-ext-val ] )
       chunk-ext-name = token
       chunk-ext-val  = token | quoted-string
       chunk-data     = chunk-size(OCTET)
       trailer        = *(entity-header CRLF)
</pre>
<p>
   The chunk-size field is a string of hex digits indicating the size of
   the chunk. The chunked encoding is ended by any chunk whose size is
   zero, followed by the trailer, which is terminated by an empty line.
</p>
<p>
   The trailer allows the sender to include additional HTTP header
   fields at the end of the message. The Trailer header field can be
   used to indicate which header fields are included in a trailer (see
   section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.40">14.40</a>).
</p>
<p>
   A server using chunked transfer-coding in a response MUST NOT use the
   trailer for any header fields unless at least one of the following is
   true:
</p>
<p>
   a)the request included a TE header field that indicates "trailers" is
     acceptable in the transfer-coding of the  response, as described in
     section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.39">14.39</a>; or,
</p>
<p>
   b)the server is the origin server for the response, the trailer
     fields consist entirely of optional metadata, and the recipient
     could use the message (in a manner acceptable to the origin server)
     without receiving this metadata.  In other words, the origin server
     is willing to accept the possibility that the trailer fields might
     be silently discarded along the path to the client.
</p>
<p>
   This requirement prevents an interoperability failure when the
   message is being received by an HTTP/1.1 (or later) proxy and
   forwarded to an HTTP/1.0 recipient. It avoids a situation where
   compliance with the protocol would have necessitated a possibly
   infinite buffer on the proxy.
</p>
<p>
   An example process for decoding a Chunked-Body is presented in
   appendix 19.4.6.
</p>
<p>
   All HTTP/1.1 applications MUST be able to receive and decode the
   "chunked" transfer-coding, and MUST ignore chunk-extension extensions
   they do not understand.
</p>
<h3><a id="sec3.7">3.7</a> Media Types</h3>
<p>
   HTTP uses Internet Media Types <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib17">[17]</a> in the Content-Type (section
   14.17) and Accept (section 14.1) header fields in order to provide
   open and extensible data typing and type negotiation.
</p>
<pre>       media-type     = type "/" subtype *( ";" parameter )
       type           = token
       subtype        = token
</pre>
<p>
   Parameters MAY follow the type/subtype in the form of attribute/value
   pairs (as defined in section 3.6).
</p>
<p>
   The type, subtype, and parameter attribute names are case-
   insensitive. Parameter values might or might not be case-sensitive,
   depending on the semantics of the parameter name. Linear white space
   (LWS) MUST NOT be used between the type and subtype, nor between an
   attribute and its value. The presence or absence of a parameter might
   be significant to the processing of a media-type, depending on its
   definition within the media type registry.
</p>
<p>
   Note that some older HTTP applications do not recognize media type
   parameters. When sending data to older HTTP applications,
   implementations SHOULD only use media type parameters when they are
   required by that type/subtype definition.
</p>
<p>
   Media-type values are registered with the Internet Assigned Number
   Authority (IANA [19]). The media type registration process is
   outlined in RFC 1590 <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib17">[17]</a>. Use of non-registered media types is
   discouraged.
</p>
<h3><a id="sec3.7.1">3.7.1</a> Canonicalization and Text Defaults</h3>
<p>
   Internet media types are registered with a canonical form. An
   entity-body transferred via HTTP messages MUST be represented in the
   appropriate canonical form prior to its transmission except for
   "text" types, as defined in the next paragraph.
</p>
<p>
   When in canonical form, media subtypes of the "text" type use CRLF as
   the text line break. HTTP relaxes this requirement and allows the
   transport of text media with plain CR or LF alone representing a line
   break when it is done consistently for an entire entity-body. HTTP
   applications MUST accept CRLF, bare CR, and bare LF as being
   representative of a line break in text media received via HTTP. In
   addition, if the text is represented in a character set that does not
   use octets 13 and 10 for CR and LF respectively, as is the case for
   some multi-byte character sets, HTTP allows the use of whatever octet
   sequences are defined by that character set to represent the
   equivalent of CR and LF for line breaks. This flexibility regarding
   line breaks applies only to text media in the entity-body; a bare CR
   or LF MUST NOT be substituted for CRLF within any of the HTTP control
   structures (such as header fields and multipart boundaries).
</p>
<p>
   If an entity-body is encoded with a content-coding, the underlying
   data MUST be in a form defined above prior to being encoded.
</p>
<p>
   The "charset" parameter is used with some media types to define the
   character set (section 3.4) of the data. When no explicit charset
   parameter is provided by the sender, media subtypes of the "text"
   type are defined to have a default charset value of "ISO-8859-1" when
   received via HTTP. Data in character sets other than "ISO-8859-1" or
   its subsets MUST be labeled with an appropriate charset value. See
   section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.4.1">3.4.1</a> for compatibility problems.
</p>
<h3><a id="sec3.7.2">3.7.2</a> Multipart Types</h3>
<p>
   MIME provides for a number of "multipart" types -- encapsulations of
   one or more entities within a single message-body. All multipart
   types share a common syntax, as defined in section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec5.html#sec5.1.1">5.1.1</a> of RFC 2046
</p>
<p>
   <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib40">[40]</a>, and MUST include a boundary parameter as part of the media type
   value. The message body is itself a protocol element and MUST
   therefore use only CRLF to represent line breaks between body-parts.
   Unlike in RFC 2046, the epilogue of any multipart message MUST be
   empty; HTTP applications MUST NOT transmit the epilogue (even if the
   original multipart contains an epilogue). These restrictions exist in
   order to preserve the self-delimiting nature of a multipart message-
   body, wherein the "end" of the message-body is indicated by the
   ending multipart boundary.
</p>
<p>
   In general, HTTP treats a multipart message-body no differently than
   any other media type: strictly as payload. The one exception is the
   "multipart/byteranges" type (appendix <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.2">19.2</a>) when it appears in a 206
   (Partial Content) response, which will be interpreted by some HTTP
   caching mechanisms as described in sections <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html#sec13.5.4">13.5.4</a> and <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16">14.16</a>. In all
   other cases, an HTTP user agent SHOULD follow the same or similar
   behavior as a MIME user agent would upon receipt of a multipart type.
   The MIME header fields within each body-part of a multipart message-
   body do not have any significance to HTTP beyond that defined by
   their MIME semantics.
</p>
<p>
   In general, an HTTP user agent SHOULD follow the same or similar
   behavior as a MIME user agent would upon receipt of a multipart type.
   If an application receives an unrecognized multipart subtype, the
   application MUST treat it as being equivalent to "multipart/mixed".
</p>
<pre>      Note: The "multipart/form-data" type has been specifically defined
      for carrying form data suitable for processing via the POST
      request method, as described in RFC 1867 <a rel="bibref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec17.html#bib15">[15]</a>.
</pre>
<h3><a id="sec3.8">3.8</a> Product Tokens</h3>
<p>
   Product tokens are used to allow communicating applications to
   identify themselves by software name and version. Most fields using
   product tokens also allow sub-products which form a significant part
   of the application to be listed, separated by white space. By
   convention, the products are listed in order of their significance
   for identifying the application.
</p>
<pre>       product         = token ["/" product-version]
       product-version = token
</pre>
<p>
   Examples:
</p>
<pre>       User-Agent: CERN-LineMode/2.15 libwww/2.17b3
       Server: Apache/0.8.4
</pre>
<p>
   Product tokens SHOULD be short and to the point. They MUST NOT be
   used for advertising or other non-essential information. Although any
   token character MAY appear in a product-version, this token SHOULD
   only be used for a version identifier (i.e., successive versions of
   the same product SHOULD only differ in the product-version portion of
   the product value).
</p>
<h3><a id="sec3.9">3.9</a> Quality Values</h3>
<p>
   HTTP content negotiation (section 12) uses short "floating point"
   numbers to indicate the relative importance ("weight") of various
   negotiable parameters.  A weight is normalized to a real number in
   the range 0 through 1, where 0 is the minimum and 1 the maximum
   value. If a parameter has a quality value of 0, then content with
   this parameter is `not acceptable' for the client. HTTP/1.1
   applications MUST NOT generate more than three digits after the
   decimal point. User configuration of these values SHOULD also be
   limited in this fashion.
</p>
<pre>       qvalue         = ( "0" [ "." 0*3DIGIT ] )
                      | ( "1" [ "." 0*3("0") ] )
</pre>
<p>
   "Quality values" is a misnomer, since these values merely represent
   relative degradation in desired quality.
</p>
<h3><a id="sec3.10">3.10</a> Language Tags</h3>
<p>
   A language tag identifies a natural language spoken, written, or
   otherwise conveyed by human beings for communication of information
   to other human beings. Computer languages are explicitly excluded.
   HTTP uses language tags within the Accept-Language and Content-
   Language fields.
</p>
<p>
   The syntax and registry of HTTP language tags is the same as that
   defined by RFC 1766 [1]. In summary, a language tag is composed of 1
   or more parts: A primary language tag and a possibly empty series of
   subtags:
</p>
<pre>        language-tag  = primary-tag *( "-" subtag )
        primary-tag   = 1*8ALPHA
        subtag        = 1*8ALPHA
</pre>
<p>
   White space is not allowed within the tag and all tags are case-
   insensitive. The name space of language tags is administered by the
   IANA. Example tags include:
</p>
<pre>       en, en-US, en-cockney, i-cherokee, x-pig-latin
</pre>
<p>
   where any two-letter primary-tag is an ISO-639 language abbreviation
   and any two-letter initial subtag is an ISO-3166 country code. (The
   last three tags above are not registered tags; all but the last are
   examples of tags which could be registered in future.)
</p>
<h3><a id="sec3.11">3.11</a> Entity Tags</h3>
<p>
   Entity tags are used for comparing two or more entities from the same
   requested resource. HTTP/1.1 uses entity tags in the ETag (section
   <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.19">14.19</a>), If-Match (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.24">14.24</a>), If-None-Match (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.26">14.26</a>), and
   If-Range (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.27">14.27</a>) header fields. The definition of how they
   are used and compared as cache validators is in section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html#sec13.3.3">13.3.3</a>. An
   entity tag consists of an opaque quoted string, possibly prefixed by
   a weakness indicator.
</p>
<pre>      entity-tag = [ weak ] opaque-tag
      weak       = "W/"
      opaque-tag = quoted-string
</pre>
<p>
   A "strong entity tag" MAY be shared by two entities of a resource
   only if they are equivalent by octet equality.
</p>
<p>
   A "weak entity tag," indicated by the "W/" prefix, MAY be shared by
   two entities of a resource only if the entities are equivalent and
   could be substituted for each other with no significant change in
   semantics. A weak entity tag can only be used for weak comparison.
</p>
<p>
   An entity tag MUST be unique across all versions of all entities
   associated with a particular resource. A given entity tag value MAY
   be used for entities obtained by requests on different URIs. The use
   of the same entity tag value in conjunction with entities obtained by
   requests on different URIs does not imply the equivalence of those
   entities.
</p>
<h3><a id="sec3.12">3.12</a> Range Units</h3>
<p>
   HTTP/1.1 allows a client to request that only part (a range of) the
   response entity be included within the response. HTTP/1.1 uses range
   units in the Range (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35">14.35</a>) and Content-Range (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16">14.16</a>)
   header fields. An entity can be broken down into subranges according
   to various structural units.
</p>
<pre>      range-unit       = bytes-unit | other-range-unit
      bytes-unit       = "bytes"
      other-range-unit = token
</pre>
<p>
   The only range unit defined by HTTP/1.1 is "bytes". HTTP/1.1
   implementations MAY ignore ranges specified using other units.
</p>
<p>
   HTTP/1.1 has been designed to allow implementations of applications
   that do not depend on knowledge of ranges.
</p>
</body></html>
"""
Transfered bytes: 36449
From disk.
Executed in thread 'Hilo (3)'.

Date: Mon, 27 Sep 2010 07:04:06 
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:04:06 
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 251
From .
Executed in thread 'Hilo (4)'.

Date: Mon, 27 Sep 2010 07:04:12 
IP: 127.0.0.1
URL requested:html/index.html
Sended code: """HTTP/1.1 404
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:04:12 
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 251
From .
Executed in thread 'Hilo (5)'.

Date: Mon, 27 Sep 2010 07:04:16 
IP: 127.0.0.1
URL requested:index.html
Sended code: """HTTP/1.1 
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:04:16 
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 240
From disk.
Executed in thread 'Hilo (6)'.

Date: Mon, 27 Sep 2010 07:04:16 
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:04:16 
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 251
From .
Executed in thread 'Hilo (7)'.

Date: Mon, 27 Sep 2010 07:06:57 
IP: 127.0.0.1
Date: Mon, 27 Sep 2010 07:07:35 
IP: 127.0.0.1
URL requested:
Sended code: """HTTP/1.1 405
Allow: HEAD
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:07:35 
"""
Transfered bytes: 97
From .
Executed in thread 'Hilo (1)'.

Date: Mon, 27 Sep 2010 07:07:36 
IP: 127.0.0.1
URL requested:
Sended code: """HTTP/1.1 405
Allow: HEAD
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:07:36 
"""
Transfered bytes: 97
From .
Executed in thread 'Hilo (2)'.

Date: Mon, 27 Sep 2010 07:07:37 
IP: 127.0.0.1
URL requested:
Sended code: """HTTP/1.1 405
Allow: HEAD
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:07:37 
"""
Transfered bytes: 97
From .
Executed in thread 'Hilo (3)'.

Date: Mon, 27 Sep 2010 07:09:19 
IP: 127.0.0.1
URL requested:
Sended code: """HTTP/1.1 405
Allow: HEAD
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:09:19 
"""
Transfered bytes: 97
From .
Executed in thread 'Hilo (4)'.

Date: Mon, 27 Sep 2010 07:09:19 
IP: 127.0.0.1
URL requested:
Sended code: """HTTP/1.1 405
Allow: HEAD
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:09:19 
"""
Transfered bytes: 97
From .
Executed in thread 'Hilo (5)'.

Date: Mon, 27 Sep 2010 07:09:20 
IP: 127.0.0.1
URL requested:
Sended code: """HTTP/1.1 405
Allow: HEAD
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:09:20 
"""
Transfered bytes: 97
From .
Executed in thread 'Hilo (6)'.

Date: Mon, 27 Sep 2010 07:09:20 
IP: 127.0.0.1
URL requested:
Sended code: """HTTP/1.1 405
Allow: HEAD
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:09:20 
"""
Transfered bytes: 97
From .
Executed in thread 'Hilo (7)'.

Date: Mon, 27 Sep 2010 07:09:20 
IP: 127.0.0.1
URL requested:
Sended code: """HTTP/1.1 405
Allow: HEAD
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:09:20 
"""
Transfered bytes: 97
From .
Executed in thread 'Hilo (8)'.

Date: Mon, 27 Sep 2010 07:09:41 
IP: 127.0.0.1
URL requested:html/rfc2616-sec%203.html
Sended code: """HTTP/1.1 404
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:09:41 
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 251
From .
Executed in thread 'Hilo (1)'.

Date: Mon, 27 Sep 2010 07:10:24 
IP: 127.0.0.1
URL requested:html/rfc2616-sec%203.html
Sended code: """HTTP/1.1 404
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:10:24 
Content-Type: text/html
Content-Length: 0


"""
Transfered bytes: 129
From .
Executed in thread 'Hilo (1)'.

Date: Mon, 27 Sep 2010 07:11:37 
IP: 127.0.0.1
URL requested:html/rfc2616-sec%203.html
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:11:37 
"""
Transfered bytes: 95
From .
Executed in thread 'Hilo (1)'.

Date: Mon, 27 Sep 2010 07:11:48 
IP: 127.0.0.1
URL requested:index.html
Sended code: """HTTP/1.1 
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:11:48 
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 240
From disk.
Executed in thread 'Hilo (2)'.

Date: Mon, 27 Sep 2010 07:11:48 
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:11:48 
"""
Transfered bytes: 95
From .
Executed in thread 'Hilo (3)'.

Date: Mon, 27 Sep 2010 07:11:51 
IP: 127.0.0.1
URL requested:S
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:11:51 
"""
Transfered bytes: 95
From .
Executed in thread 'Hilo (4)'.

Date: Mon, 27 Sep 2010 07:13:41 
IP: 127.0.0.1
URL requested:html/rfc2616-sec%203.html
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:13:41 
"""
Transfered bytes: 95
From .
Executed in thread 'Hilo (1)'.

Date: Mon, 27 Sep 2010 07:13:44 
IP: 127.0.0.1
URL requested:html/rfc2616-sec%203.html
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:13:44 
"""
Transfered bytes: 95
From .
Executed in thread 'Hilo (2)'.

Date: Mon, 27 Sep 2010 07:14:35 
IP: 127.0.0.1
URL requested:S
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:14:35 
"""
Transfered bytes: 95
From .
Executed in thread 'Hilo (3)'.

Date: Mon, 27 Sep 2010 07:14:35 
IP: 127.0.0.1
URL requested:S
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:14:35 
"""
Transfered bytes: 95
From .
Executed in thread 'Hilo (4)'.

Date: Mon, 27 Sep 2010 07:14:36 
IP: 127.0.0.1
URL requested:S
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:14:36 
"""
Transfered bytes: 95
From .
Executed in thread 'Hilo (5)'.

Date: Mon, 27 Sep 2010 07:14:36 
IP: 127.0.0.1
URL requested:S
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:14:36 
"""
Transfered bytes: 95
From .
Executed in thread 'Hilo (6)'.

Date: Mon, 27 Sep 2010 07:14:36 
IP: 127.0.0.1
URL requested:S
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:14:36 
"""
Transfered bytes: 95
From .
Executed in thread 'Hilo (7)'.

Date: Mon, 27 Sep 2010 07:14:36 
IP: 127.0.0.1
URL requested:S
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:14:36 
"""
Transfered bytes: 95
From .
Executed in thread 'Hilo (8)'.

Date: Mon, 27 Sep 2010 07:14:36 
IP: 127.0.0.1
URL requested:S
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:14:36 
"""
Transfered bytes: 95
From .
Executed in thread 'Hilo (9)'.

Date: Mon, 27 Sep 2010 07:14:37 
IP: 127.0.0.1
URL requested:S
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:14:37 
"""
Transfered bytes: 95
From .
Executed in thread 'Hilo (10)'.

Date: Mon, 27 Sep 2010 07:14:37 
IP: 127.0.0.1
URL requested:S
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:14:37 
"""
Transfered bytes: 95
From .
Executed in thread 'Hilo (1)'.

Date: Mon, 27 Sep 2010 07:14:37 
IP: 127.0.0.1
URL requested:S
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:14:37 
"""
Transfered bytes: 95
From .
Executed in thread 'Hilo (2)'.

Date: Mon, 27 Sep 2010 07:14:37 
IP: 127.0.0.1
URL requested:S
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:14:37 
"""
Transfered bytes: 95
From .
Executed in thread 'Hilo (3)'.

Date: Mon, 27 Sep 2010 07:14:37 
IP: 127.0.0.1
URL requested:S
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:14:37 
"""
Transfered bytes: 95
From .
Executed in thread 'Hilo (4)'.

Date: Mon, 27 Sep 2010 07:14:37 
IP: 127.0.0.1
URL requested:S
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:14:37 
"""
Transfered bytes: 95
From .
Executed in thread 'Hilo (5)'.

Date: Mon, 27 Sep 2010 07:14:38 
IP: 127.0.0.1
URL requested:S
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:14:38 
"""
Transfered bytes: 95
From .
Executed in thread 'Hilo (6)'.

Date: Mon, 27 Sep 2010 07:14:38 
IP: 127.0.0.1
URL requested:S
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:14:38 
"""
Transfered bytes: 95
From .
Executed in thread 'Hilo (7)'.

Date: Mon, 27 Sep 2010 07:16:19 
IP: 127.0.0.1
URL requested:S
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:16:19 
"""
Transfered bytes: 95
From .
Executed in thread 'Hilo (8)'.

Date: Mon, 27 Sep 2010 07:27:43 
IP: 127.0.0.1
URL requested:index.html
Sended code: """HTTP/1.1 
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:27:43 
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 240
From disk.
Executed in thread 'Hilo (9)'.

Date: Mon, 27 Sep 2010 07:28:41 
IP: 127.0.0.1
URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:28:41 
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 246
From disk.
Executed in thread 'Hilo (1)'.

Date: Mon, 27 Sep 2010 07:41:23 GMT
IP: 127.0.0.1
URL requested:S
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:41:23 GMT
"""
Transfered bytes: 98
From .
Executed in thread 'Hilo (1)'.

Date: Mon, 27 Sep 2010 07:47:24 GMT
IP: 127.0.0.1
URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:47:24 GMT
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 249
From disk.
Executed in thread 'Hilo (1)'.

Date: Mon, 27 Sep 2010 07:47:28 GMT
IP: 127.0.0.1
URL requested:s
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:47:28 GMT
"""
Transfered bytes: 98
From .
Executed in thread 'Hilo (2)'.

Date: Mon, 27 Sep 2010 07:52:29 GMT
IP: 127.0.0.1
URL requested:S
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:52:29 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (1)'.

Date: Mon, 27 Sep 2010 07:52:31 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:52:31 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (2)'.

Date: Mon, 27 Sep 2010 07:52:32 GMT
IP: 127.0.0.1
URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:52:32 GMT
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 249
From disk.
Executed in thread 'Hilo (3)'.

Date: Mon, 27 Sep 2010 07:52:32 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:52:32 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (4)'.

Date: Mon, 27 Sep 2010 07:52:33 GMT
IP: 127.0.0.1
URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:52:33 GMT
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 249
From cache.
Executed in thread 'Hilo (5)'.

Date: Mon, 27 Sep 2010 07:52:33 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:52:33 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (6)'.

Date: Mon, 27 Sep 2010 07:52:46 GMT
IP: 127.0.0.1
URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:52:46 GMT
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 249
From cache.
Executed in thread 'Hilo (7)'.

Date: Mon, 27 Sep 2010 07:52:46 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:52:46 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (8)'.

Date: Mon, 27 Sep 2010 07:53:14 GMT
IP: 127.0.0.1
URL requested:s
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:53:14 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (9)'.

Date: Mon, 27 Sep 2010 07:53:17 GMT
IP: 127.0.0.1
URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:53:17 GMT
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 249
From cache.
Executed in thread 'Hilo (10)'.

Date: Mon, 27 Sep 2010 07:53:21 GMT
IP: 127.0.0.1
URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 07:53:21 GMT
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 249
From cache.
Executed in thread 'Hilo (1)'.

Date: Mon, 27 Sep 2010 21:33:53 GMT
IP: 127.0.0.1
Date: Mon, 27 Sep 2010 22:06:02 GMT
IP: 127.0.0.1
Date: Mon, 27 Sep 2010 22:06:03 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 22:06:03 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (2)'.

Date: Mon, 27 Sep 2010 22:12:59 GMT
IP: 127.0.0.1
Date: Mon, 27 Sep 2010 22:13:59 GMT
IP: 127.0.0.1
Date: Mon, 27 Sep 2010 22:15:20 GMT
IP: 127.0.0.1
Date: Mon, 27 Sep 2010 22:15:57 GMT
IP: 127.0.0.1
Date: Mon, 27 Sep 2010 22:17:17 GMT
IP: 127.0.0.1
URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 22:17:17 GMT
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 249
From disk.
Executed in thread 'Hilo (1)'.

Date: Mon, 27 Sep 2010 22:17:20 GMT
IP: 127.0.0.1
Date: Mon, 27 Sep 2010 22:19:24 GMT
IP: 127.0.0.1
URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 22:19:24 GMT
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 249
From disk.
Executed in thread 'Hilo (1)'.

Date: Mon, 27 Sep 2010 22:19:26 GMT
IP: 127.0.0.1
URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 22:19:26 GMT
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 249
From cache.
Executed in thread 'Hilo (2)'.

Date: Mon, 27 Sep 2010 22:19:27 GMT
IP: 127.0.0.1
URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 22:19:27 GMT
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 249
From cache.
Executed in thread 'Hilo (3)'.

Date: Mon, 27 Sep 2010 22:19:32 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 22:19:32 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (4)'.

Date: Mon, 27 Sep 2010 22:20:55 GMT
IP: 127.0.0.1
Date: Mon, 27 Sep 2010 22:21:16 GMT
IP: 127.0.0.1
Date: Mon, 27 Sep 2010 22:21:32 GMT
IP: 127.0.0.1
Date: Mon, 27 Sep 2010 22:27:43 GMT
IP: 127.0.0.1
Date: Mon, 27 Sep 2010 22:31:00 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 22:31:00 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (1)'.

Date: Mon, 27 Sep 2010 22:31:17 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 22:31:17 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (2)'.

Date: Mon, 27 Sep 2010 22:31:21 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 22:31:21 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (3)'.

Date: Mon, 27 Sep 2010 22:42:28 GMT
IP: 127.0.0.1
URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 22:42:28 GMT
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 249
From disk.
Executed in thread 'Hilo (1)'.

Date: Mon, 27 Sep 2010 22:42:35 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 22:42:35 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (2)'.

Date: Mon, 27 Sep 2010 22:42:44 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 22:42:44 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (3)'.

Date: Mon, 27 Sep 2010 22:48:28 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 22:48:28 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (1)'.

Date: Mon, 27 Sep 2010 22:48:37 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 22:48:37 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (2)'.

Date: Mon, 27 Sep 2010 22:48:57 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 22:48:57 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (3)'.

Date: Mon, 27 Sep 2010 22:49:08 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 22:49:08 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (4)'.

Date: Mon, 27 Sep 2010 22:49:15 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 22:49:15 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (5)'.

Date: Mon, 27 Sep 2010 22:52:23 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 22:52:23 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (1)'.

Date: Mon, 27 Sep 2010 22:53:37 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 22:53:37 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (2)'.

Date: Mon, 27 Sep 2010 22:56:56 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 22:56:56 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (1)'.

Date: Mon, 27 Sep 2010 22:56:59 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 22:56:59 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (2)'.

Date: Mon, 27 Sep 2010 22:57:05 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Mon, 27 Sep 2010 22:57:05 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (3)'.

Date: Tue, 28 Sep 2010 05:28:43 GMT
IP: 127.0.0.1
URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 05:28:43 GMT
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 249
From disk.
Executed in thread 'Hilo (1)'.

Date: Tue, 28 Sep 2010 05:28:43 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 05:28:43 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (2)'.

Date: Tue, 28 Sep 2010 05:31:38 GMT
IP: 127.0.0.1
URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 05:31:38 GMT
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 249
From cache.
Executed in thread 'Hilo (3)'.

Date: Tue, 28 Sep 2010 05:31:38 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 05:31:38 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (4)'.

Date: Tue, 28 Sep 2010 05:31:41 GMT
IP: 127.0.0.1
URL requested:s.html
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 05:31:41 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (5)'.

Date: Tue, 28 Sep 2010 05:31:45 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 05:31:45 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (6)'.

Date: Tue, 28 Sep 2010 05:31:49 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 05:31:49 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (7)'.

Date: Tue, 28 Sep 2010 05:31:54 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 05:31:54 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (8)'.

Date: Tue, 28 Sep 2010 05:31:57 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 05:31:57 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (9)'.

Date: Tue, 28 Sep 2010 05:50:17 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 05:50:17 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (10)'.

Date: Tue, 28 Sep 2010 06:43:44 GMT
IP: 127.0.0.1
Date: Tue, 28 Sep 2010 06:51:56 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
            Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
            Date: Tue, 28 Sep 2010 06:51:56 GMT
            Content-Type: text/html
            Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 368
From "Error 401".
Executed in thread 'Hilo (1)'.

Date: Tue, 28 Sep 2010 06:52:31 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
            Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
            Date: Tue, 28 Sep 2010 06:52:31 GMT
            Content-Type: text/html
            Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 368
From "Error 401".
Executed in thread 'Hilo (1)'.

Date: Tue, 28 Sep 2010 06:52:31 GMT
IP: 127.0.0.1
Date: Tue, 28 Sep 2010 06:54:24 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
            Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
            Date: Tue, 28 Sep 2010 06:54:24 GMT
            Content-Type: text/html
            Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 368
From "Error 401".
Executed in thread 'Hilo (1)'.

Date: Tue, 28 Sep 2010 06:54:24 GMT
IP: 127.0.0.1
Date: Tue, 28 Sep 2010 06:55:06 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
            Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
            Date: Tue, 28 Sep 2010 06:55:06 GMT
            Content-Type: text/html
            Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 368
From "Error 401".
Executed in thread 'Hilo (2)'.

Date: Tue, 28 Sep 2010 06:55:06 GMT
IP: 127.0.0.1
Date: Tue, 28 Sep 2010 06:55:07 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
            Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
            Date: Tue, 28 Sep 2010 06:55:07 GMT
            Content-Type: text/html
            Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 368
From "Error 401".
Executed in thread 'Hilo (3)'.

Date: Tue, 28 Sep 2010 06:55:07 GMT
IP: 127.0.0.1
Date: Tue, 28 Sep 2010 06:55:10 GMT
IP: 127.0.0.1
URL requested:index.html
Sended code: """HTTP/1.1 200 OK
            Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
            Date: Tue, 28 Sep 2010 06:55:10 GMT
            Content-Type: text/html
            Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 297
From disk.
Executed in thread 'Hilo (4)'.

Date: Tue, 28 Sep 2010 06:56:30 GMT
IP: 127.0.0.1
URL requested:index.html
Sended code: """HTTP/1.1 200 OK
            Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
            Date: Tue, 28 Sep 2010 06:56:30 GMT
            Content-Type: text/html
            Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 297
From cache.
Executed in thread 'Hilo (5)'.

Date: Tue, 28 Sep 2010 06:58:11 GMT
IP: 127.0.0.1
URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 06:58:11 GMT
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 249
From disk.
Executed in thread 'Hilo (1)'.

Date: Tue, 28 Sep 2010 06:58:11 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 06:58:12 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (2)'.

Date: Tue, 28 Sep 2010 06:59:09 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 06:59:09 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (3)'.

Date: Tue, 28 Sep 2010 06:59:09 GMT
IP: 127.0.0.1
Date: Tue, 28 Sep 2010 06:59:11 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 06:59:11 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (4)'.

Date: Tue, 28 Sep 2010 06:59:11 GMT
IP: 127.0.0.1
Date: Tue, 28 Sep 2010 06:59:14 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 06:59:14 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (5)'.

Date: Tue, 28 Sep 2010 06:59:14 GMT
IP: 127.0.0.1
Date: Tue, 28 Sep 2010 06:59:32 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 06:59:32 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (6)'.

Date: Tue, 28 Sep 2010 06:59:32 GMT
IP: 127.0.0.1
Date: Tue, 28 Sep 2010 07:00:32 GMT
IP: 127.0.0.1
URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:00:32 GMT
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 249
From cache.
Executed in thread 'Hilo (7)'.

Date: Tue, 28 Sep 2010 07:00:32 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:00:32 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (8)'.

Date: Tue, 28 Sep 2010 07:00:35 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:00:35 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (9)'.

Date: Tue, 28 Sep 2010 07:00:37 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:00:37 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (10)'.

Date: Tue, 28 Sep 2010 07:00:37 GMT
IP: 127.0.0.1
Date: Tue, 28 Sep 2010 07:00:41 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:00:41 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (1)'.

Date: Tue, 28 Sep 2010 07:00:41 GMT
IP: 127.0.0.1
Date: Tue, 28 Sep 2010 07:00:45 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:00:45 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (2)'.

Date: Tue, 28 Sep 2010 07:00:45 GMT
IP: 127.0.0.1
Date: Tue, 28 Sep 2010 07:02:01 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:02:01 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (3)'.

Date: Tue, 28 Sep 2010 07:02:01 GMT
IP: 127.0.0.1
Date: Tue, 28 Sep 2010 07:07:53 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:07:53 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (1)'.

Date: Tue, 28 Sep 2010 07:07:53 GMT
IP: 127.0.0.1
URL requested:
Sended code: """HTTP/1.1 405 Method Not Allowed
Allow: GET
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:07:53 GMT
Content-Type: text/html
Content-Length: 125

<HTML>
  <HEAD>
    <TITLE>Error 405</TITLE>
  </HEAD>
  <BODY>
    <P>Error 405: Method Not Allowed.</P>
  </BODY>
</HTML>


"""
Transfered bytes: 289
From "Error 405".
Executed in thread 'Hilo (1)'.

Date: Tue, 28 Sep 2010 07:07:56 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:07:56 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (2)'.

Date: Tue, 28 Sep 2010 07:07:56 GMT
IP: 127.0.0.1
URL requested:
Sended code: """HTTP/1.1 405 Method Not Allowed
Allow: GET
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:07:56 GMT
Content-Type: text/html
Content-Length: 125

<HTML>
  <HEAD>
    <TITLE>Error 405</TITLE>
  </HEAD>
  <BODY>
    <P>Error 405: Method Not Allowed.</P>
  </BODY>
</HTML>


"""
Transfered bytes: 289
From "Error 405".
Executed in thread 'Hilo (2)'.

Date: Tue, 28 Sep 2010 07:09:21 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:09:21 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (3)'.

Date: Tue, 28 Sep 2010 07:09:21 GMT
IP: 127.0.0.1
URL requested:
Sended code: """HTTP/1.1 405 Method Not Allowed
Allow: GET
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:09:21 GMT
Content-Type: text/html
Content-Length: 125

<HTML>
  <HEAD>
    <TITLE>Error 405</TITLE>
  </HEAD>
  <BODY>
    <P>Error 405: Method Not Allowed.</P>
  </BODY>
</HTML>


"""
Transfered bytes: 289
From "Error 405".
Executed in thread 'Hilo (3)'.

Date: Tue, 28 Sep 2010 07:11:27 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:11:27 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (4)'.

Date: Tue, 28 Sep 2010 07:11:27 GMT
IP: 127.0.0.1
URL requested:
Sended code: """HTTP/1.1 405 Method Not Allowed
Allow: GET
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:11:27 GMT
Content-Type: text/html
Content-Length: 125

<HTML>
  <HEAD>
    <TITLE>Error 405</TITLE>
  </HEAD>
  <BODY>
    <P>Error 405: Method Not Allowed.</P>
  </BODY>
</HTML>


"""
Transfered bytes: 289
From "Error 405".
Executed in thread 'Hilo (4)'.

Date: Tue, 28 Sep 2010 07:13:37 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:13:37 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (1)'.

Date: Tue, 28 Sep 2010 07:13:37 GMT
IP: 127.0.0.1
URL requested:
Sended code: """HTTP/1.1 405 Method Not Allowed
Allow: GET
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:13:37 GMT
Content-Type: text/html
Content-Length: 125

<HTML>
  <HEAD>
    <TITLE>Error 405</TITLE>
  </HEAD>
  <BODY>
    <P>Error 405: Method Not Allowed.</P>
  </BODY>
</HTML>


"""
Transfered bytes: 289
From "Error 405".
Executed in thread 'Hilo (1)'.

Date: Tue, 28 Sep 2010 07:35:36 GMT
IP: 127.0.0.1
URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:35:36 GMT
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 249
From disk.
Executed in thread 'Hilo (1)'.

Date: Tue, 28 Sep 2010 07:35:36 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:35:36 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (2)'.

Date: Tue, 28 Sep 2010 07:35:44 GMT
IP: 127.0.0.1
Date: Tue, 28 Sep 2010 07:44:23 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:44:23 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (1)'.

Date: Tue, 28 Sep 2010 07:44:26 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:44:26 GMT
Content-Type: text/html
Content-Length: 182

<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
  </HEAD>
  <BODY><H1>401 Unauthorized.</H1></BODY>
</HTML>

"""
Transfered bytes: 319
From cache.
Executed in thread 'Hilo (1)'.

Date: Tue, 28 Sep 2010 07:44:27 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:44:27 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (2)'.

Date: Tue, 28 Sep 2010 07:46:47 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:46:47 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (3)'.

Date: Tue, 28 Sep 2010 07:46:52 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:46:52 GMT
Content-Type: text/html
Content-Length: 182

<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
  </HEAD>
  <BODY><H1>401 Unauthorized.</H1></BODY>
</HTML>

"""
Transfered bytes: 319
From cache.
Executed in thread 'Hilo (3)'.

Date: Tue, 28 Sep 2010 07:46:52 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:46:52 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (4)'.

Date: Tue, 28 Sep 2010 07:46:55 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:46:55 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (5)'.

Date: Tue, 28 Sep 2010 07:47:09 GMT
IP: 127.0.0.1
URL requested:index
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:47:09 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (6)'.

Date: Tue, 28 Sep 2010 07:47:15 GMT
IP: 127.0.0.1
URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:47:15 GMT
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 249
From disk.
Executed in thread 'Hilo (7)'.

Date: Tue, 28 Sep 2010 07:48:41 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:48:41 GMT
Content-Type: text/html
Content-Length: 182

<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
  </HEAD>
  <BODY><H1>401 Unauthorized.</H1></BODY>
</HTML>

"""
Transfered bytes: 319
From cache.
Executed in thread 'Hilo (8)'.

Date: Tue, 28 Sep 2010 07:49:58 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:49:58 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (1)'.

Date: Tue, 28 Sep 2010 07:50:01 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:50:01 GMT
Content-Type: text/html
Content-Length: 245

<HTML>
  <HEAD>
    <TITLE>Valid Authorizations.</TITLE>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
  </HEAD>
  <BODY><H1>Contratulations</H1>
      You have loggin, now you can see this page.
  </BODY>
</HTML>

"""
Transfered bytes: 382
From cache.
Executed in thread 'Hilo (1)'.

Date: Tue, 28 Sep 2010 07:50:01 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:50:01 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (2)'.

Date: Tue, 28 Sep 2010 07:50:04 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:50:04 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (3)'.

Date: Tue, 28 Sep 2010 07:50:14 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:50:14 GMT
Content-Type: text/html
Content-Length: 245

<HTML>
  <HEAD>
    <TITLE>Valid Authorizations.</TITLE>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
  </HEAD>
  <BODY><H1>Contratulations</H1>
      You have loggin, now you can see this page.
  </BODY>
</HTML>

"""
Transfered bytes: 382
From cache.
Executed in thread 'Hilo (4)'.

Date: Tue, 28 Sep 2010 07:50:20 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:50:20 GMT
Content-Type: text/html
Content-Length: 245

<HTML>
  <HEAD>
    <TITLE>Valid Authorizations.</TITLE>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
  </HEAD>
  <BODY><H1>Contratulations</H1>
      You have loggin, now you can see this page.
  </BODY>
</HTML>

"""
Transfered bytes: 382
From cache.
Executed in thread 'Hilo (5)'.

Date: Tue, 28 Sep 2010 07:50:27 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:50:27 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (6)'.

Date: Tue, 28 Sep 2010 07:50:33 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:50:33 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (6)'.

Date: Tue, 28 Sep 2010 07:50:36 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:50:36 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (6)'.

Date: Tue, 28 Sep 2010 07:50:38 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:50:38 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (6)'.

Date: Tue, 28 Sep 2010 07:50:41 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:50:41 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (7)'.

Date: Tue, 28 Sep 2010 07:50:41 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:50:41 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (8)'.

Date: Tue, 28 Sep 2010 07:50:59 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:50:59 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (9)'.

Date: Tue, 28 Sep 2010 07:51:03 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:51:03 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (9)'.

Date: Tue, 28 Sep 2010 07:51:06 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:51:06 GMT
Content-Type: text/html
Content-Length: 245

<HTML>
  <HEAD>
    <TITLE>Valid Authorizations.</TITLE>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
  </HEAD>
  <BODY><H1>Contratulations</H1>
      You have loggin, now you can see this page.
  </BODY>
</HTML>

"""
Transfered bytes: 382
From cache.
Executed in thread 'Hilo (9)'.

Date: Tue, 28 Sep 2010 07:51:06 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 28 Sep 2010 07:51:06 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (10)'.

Date: Tue, 05 Oct 2010 04:27:22 GMT
IP: 127.0.0.1
URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:27:22 GMT
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 249
From disk.
Executed in thread 'Hilo (1)'.

Date: Tue, 05 Oct 2010 04:27:22 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:27:22 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (2)'.

Date: Tue, 05 Oct 2010 04:27:29 GMT
IP: 127.0.0.1
URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:27:29 GMT
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 249
From cache.
Executed in thread 'Hilo (3)'.

Date: Tue, 05 Oct 2010 04:27:29 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:27:29 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (4)'.

Date: Tue, 05 Oct 2010 04:27:35 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:27:35 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (5)'.

Date: Tue, 05 Oct 2010 04:27:38 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:27:38 GMT
Content-Type: text/html
Content-Length: 245

<HTML>
  <HEAD>
    <TITLE>Valid Authorizations.</TITLE>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
  </HEAD>
  <BODY><H1>Contratulations</H1>
      You have loggin, now you can see this page.
  </BODY>
</HTML>

"""
Transfered bytes: 382
From cache.
Executed in thread 'Hilo (6)'.

Date: Tue, 05 Oct 2010 04:27:38 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:27:38 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (7)'.

Date: Tue, 05 Oct 2010 04:28:22 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:28:22 GMT
Content-Type: text/html
Content-Length: 245

<HTML>
  <HEAD>
    <TITLE>Valid Authorizations.</TITLE>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
  </HEAD>
  <BODY><H1>Contratulations</H1>
      You have loggin, now you can see this page.
  </BODY>
</HTML>

"""
Transfered bytes: 382
From cache.
Executed in thread 'Hilo (8)'.

Date: Tue, 05 Oct 2010 04:28:22 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:28:22 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (9)'.

Date: Tue, 05 Oct 2010 04:28:29 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:28:29 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (10)'.

Date: Tue, 05 Oct 2010 04:45:28 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:45:28 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (1)'.

Date: Tue, 05 Oct 2010 04:45:37 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:45:37 GMT
Content-Type: text/html
Content-Length: 245

<HTML>
  <HEAD>
    <TITLE>Valid Authorizations.</TITLE>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
  </HEAD>
  <BODY><H1>Contratulations</H1>
      You have loggin, now you can see this page.
  </BODY>
</HTML>

"""
Transfered bytes: 382
From cache.
Executed in thread 'Hilo (2)'.

Date: Tue, 05 Oct 2010 04:45:37 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:45:37 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (3)'.

Date: Tue, 05 Oct 2010 04:47:01 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:47:01 GMT
Content-Type: text/html
Content-Length: 245

<HTML>
  <HEAD>
    <TITLE>Valid Authorizations.</TITLE>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
  </HEAD>
  <BODY><H1>Contratulations</H1>
      You have loggin, now you can see this page.
  </BODY>
</HTML>

"""
Transfered bytes: 382
From disk.
Executed in thread 'Hilo (1)'.

Date: Tue, 05 Oct 2010 04:47:01 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:47:01 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (2)'.

Date: Tue, 05 Oct 2010 04:47:04 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:47:04 GMT
Content-Type: text/html
Content-Length: 245

<HTML>
  <HEAD>
    <TITLE>Valid Authorizations.</TITLE>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
  </HEAD>
  <BODY><H1>Contratulations</H1>
      You have loggin, now you can see this page.
  </BODY>
</HTML>

"""
Transfered bytes: 382
From cache.
Executed in thread 'Hilo (3)'.

Date: Tue, 05 Oct 2010 04:47:04 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:47:04 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (4)'.

Date: Tue, 05 Oct 2010 04:47:56 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:47:56 GMT
Content-Type: text/html
Content-Length: 245

<HTML>
  <HEAD>
    <TITLE>Valid Authorizations.</TITLE>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
  </HEAD>
  <BODY><H1>Contratulations</H1>
      You have loggin, now you can see this page.
  </BODY>
</HTML>

"""
Transfered bytes: 382
From cache.
Executed in thread 'Hilo (5)'.

Date: Tue, 05 Oct 2010 04:47:56 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:47:56 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (6)'.

Date: Tue, 05 Oct 2010 04:48:02 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:02 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (7)'.

Date: Tue, 05 Oct 2010 04:48:06 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:06 GMT
Content-Type: text/html
Content-Length: 245

<HTML>
  <HEAD>
    <TITLE>Valid Authorizations.</TITLE>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
  </HEAD>
  <BODY><H1>Contratulations</H1>
      You have loggin, now you can see this page.
  </BODY>
</HTML>

"""
Transfered bytes: 382
From cache.
Executed in thread 'Hilo (8)'.

Date: Tue, 05 Oct 2010 04:48:06 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:06 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (9)'.

Date: Tue, 05 Oct 2010 04:48:14 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:14 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (10)'.

Date: Tue, 05 Oct 2010 04:48:16 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:16 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (11)'.

Date: Tue, 05 Oct 2010 04:48:17 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:17 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (12)'.

Date: Tue, 05 Oct 2010 04:48:17 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:17 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (13)'.

Date: Tue, 05 Oct 2010 04:48:18 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:18 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (14)'.

Date: Tue, 05 Oct 2010 04:48:18 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:18 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (15)'.

Date: Tue, 05 Oct 2010 04:48:18 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:18 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (1)'.

Date: Tue, 05 Oct 2010 04:48:18 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:18 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (2)'.

Date: Tue, 05 Oct 2010 04:48:18 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:18 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (3)'.

Date: Tue, 05 Oct 2010 04:48:18 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:18 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (4)'.

Date: Tue, 05 Oct 2010 04:48:18 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:18 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (5)'.

Date: Tue, 05 Oct 2010 04:48:19 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:19 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (6)'.

Date: Tue, 05 Oct 2010 04:48:19 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:19 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (7)'.

Date: Tue, 05 Oct 2010 04:48:19 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:19 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (8)'.

Date: Tue, 05 Oct 2010 04:48:19 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:19 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (9)'.

Date: Tue, 05 Oct 2010 04:48:19 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:19 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (10)'.

Date: Tue, 05 Oct 2010 04:48:20 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:20 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (11)'.

Date: Tue, 05 Oct 2010 04:48:20 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:20 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (12)'.

Date: Tue, 05 Oct 2010 04:48:20 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:20 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (13)'.

Date: Tue, 05 Oct 2010 04:48:20 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:20 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (14)'.

Date: Tue, 05 Oct 2010 04:48:20 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:20 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (15)'.

Date: Tue, 05 Oct 2010 04:48:20 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:20 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (1)'.

Date: Tue, 05 Oct 2010 04:48:20 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:20 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (2)'.

Date: Tue, 05 Oct 2010 04:48:20 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:20 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (3)'.

Date: Tue, 05 Oct 2010 04:48:20 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:20 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (4)'.

Date: Tue, 05 Oct 2010 04:48:21 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:21 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (5)'.

Date: Tue, 05 Oct 2010 04:48:21 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:21 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (6)'.

Date: Tue, 05 Oct 2010 04:48:21 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:21 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (7)'.

Date: Tue, 05 Oct 2010 04:48:21 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:21 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (8)'.

Date: Tue, 05 Oct 2010 04:48:21 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:21 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (9)'.

Date: Tue, 05 Oct 2010 04:48:21 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:21 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (10)'.

Date: Tue, 05 Oct 2010 04:48:21 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:21 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (11)'.

Date: Tue, 05 Oct 2010 04:48:21 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:21 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (12)'.

Date: Tue, 05 Oct 2010 04:48:21 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:21 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (13)'.

Date: Tue, 05 Oct 2010 04:48:21 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:21 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (14)'.

Date: Tue, 05 Oct 2010 04:48:21 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:21 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (15)'.

Date: Tue, 05 Oct 2010 04:48:21 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:21 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (1)'.

Date: Tue, 05 Oct 2010 04:48:21 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:21 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (2)'.

Date: Tue, 05 Oct 2010 04:48:21 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:21 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (3)'.

Date: Tue, 05 Oct 2010 04:48:21 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:21 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (4)'.

Date: Tue, 05 Oct 2010 04:48:21 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:21 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (5)'.

Date: Tue, 05 Oct 2010 04:48:21 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:21 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (6)'.

Date: Tue, 05 Oct 2010 04:48:21 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:21 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (7)'.

Date: Tue, 05 Oct 2010 04:48:52 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:48:52 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (8)'.

Date: Tue, 05 Oct 2010 04:56:35 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:56:35 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (9)'.

Date: Tue, 05 Oct 2010 04:56:41 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:56:41 GMT
Content-Type: text/html
Content-Length: 245

<HTML>
  <HEAD>
    <TITLE>Valid Authorizations.</TITLE>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
  </HEAD>
  <BODY><H1>Contratulations</H1>
      You have loggin, now you can see this page.
  </BODY>
</HTML>

"""
Transfered bytes: 382
From cache.
Executed in thread 'Hilo (10)'.

Date: Tue, 05 Oct 2010 04:56:41 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 04:56:41 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (11)'.

Date: Tue, 05 Oct 2010 05:41:52 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 05:41:52 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (12)'.

Date: Tue, 05 Oct 2010 05:42:04 GMT
IP: 127.0.0.1
URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 05:42:04 GMT
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 249
From disk.
Executed in thread 'Hilo (13)'.

Date: Tue, 05 Oct 2010 05:42:04 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 05:42:04 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (14)'.

Date: Tue, 05 Oct 2010 05:42:27 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 05:42:27 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (15)'.

Date: Tue, 05 Oct 2010 05:42:34 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 05:42:34 GMT
Content-Type: text/html
Content-Length: 245

<HTML>
  <HEAD>
    <TITLE>Valid Authorizations.</TITLE>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
  </HEAD>
  <BODY><H1>Contratulations</H1>
      You have loggin, now you can see this page.
  </BODY>
</HTML>

"""
Transfered bytes: 382
From cache.
Executed in thread 'Hilo (1)'.

Date: Tue, 05 Oct 2010 05:42:34 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 05:42:34 GMT
Content-Type: text/html
Content-Length: 245

<HTML>
  <HEAD>
    <TITLE>Valid Authorizations.</TITLE>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
  </HEAD>
  <BODY><H1>Contratulations</H1>
      You have loggin, now you can see this page.
  </BODY>
</HTML>

"""
Transfered bytes: 382
From cache.
Executed in thread 'Hilo (2)'.

Date: Tue, 05 Oct 2010 05:42:34 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 05:42:34 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (3)'.

Date: Tue, 05 Oct 2010 05:42:34 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 05:42:34 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (4)'.

Date: Tue, 05 Oct 2010 05:42:49 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 05:42:49 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (6)'.

Date: Tue, 05 Oct 2010 05:42:55 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 05:42:55 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (5)'.

Date: Tue, 05 Oct 2010 05:43:10 GMT
IP: 127.0.0.1
URL requested:bla
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 05:43:10 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (7)'.

Date: Tue, 05 Oct 2010 05:44:06 GMT
IP: 127.0.0.1
URL requested:html/rfc2616-sec12.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 05:44:06 GMT
Content-Type: text/html
Content-Length: 8301

<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head>
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">

<title>HTTP/1.1: Content Negotiation</title></head><body><address>part of <a rev="Section" href="http://www.w3.org/Protocols/rfc2616/rfc2616.html">Hypertext Transfer Protocol -- HTTP/1.1</a><br>
RFC 2616 Fielding, et al.</address>
<h2><a id="sec12">12</a> Content Negotiation</h2>
<p>
   Most HTTP responses include an entity which contains information for
   interpretation by a human user. Naturally, it is desirable to supply
   the user with the "best available" entity corresponding to the
   request. Unfortunately for servers and caches, not all users have the
   same preferences for what is "best," and not all user agents are
   equally capable of rendering all entity types. For that reason, HTTP
   has provisions for several mechanisms for "content negotiation" --
   the process of selecting the best representation for a given response
   when there are multiple representations available.
</p>
<pre>      Note: This is not called "format negotiation" because the
      alternate representations may be of the same media type, but use
      different capabilities of that type, be in different languages,
      etc.
</pre>
<p>
   Any response containing an entity-body MAY be subject to negotiation,
   including error responses.
</p>
<p>
   There are two kinds of content negotiation which are possible in
   HTTP: server-driven and agent-driven negotiation. These two kinds of
   negotiation are orthogonal and thus may be used separately or in
   combination. One method of combination, referred to as transparent
   negotiation, occurs when a cache uses the agent-driven negotiation
   information provided by the origin server in order to provide
   server-driven negotiation for subsequent requests.
</p>
<h3><a id="sec12.1">12.1</a> Server-driven Negotiation</h3>
<p>
   If the selection of the best representation for a response is made by
   an algorithm located at the server, it is called server-driven
   negotiation. Selection is based on the available representations of
   the response (the dimensions over which it can vary; e.g. language,
   content-coding, etc.) and the contents of particular header fields in
   the request message or on other information pertaining to the request
   (such as the network address of the client).
</p>
<p>
   Server-driven negotiation is advantageous when the algorithm for
   selecting from among the available representations is difficult to
   describe to the user agent, or when the server desires to send its
   "best guess" to the client along with the first response (hoping to
   avoid the round-trip delay of a subsequent request if the "best
   guess" is good enough for the user). In order to improve the server's
   guess, the user agent MAY include request header fields (Accept,
   Accept-Language, Accept-Encoding, etc.) which describe its
   preferences for such a response.
</p>
<p>
   Server-driven negotiation has disadvantages:
</p>
<pre>      1. It is impossible for the server to accurately determine what
         might be "best" for any given user, since that would require
         complete knowledge of both the capabilities of the user agent
         and the intended use for the response (e.g., does the user want
         to view it on screen or print it on paper?).
</pre>
<pre>      2. Having the user agent describe its capabilities in every
         request can be both very inefficient (given that only a small
         percentage of responses have multiple representations) and a
         potential violation of the user's privacy.
</pre>
<pre>      3. It complicates the implementation of an origin server and the
         algorithms for generating responses to a request.
</pre>
<pre>      4. It may limit a public cache's ability to use the same response
         for multiple user's requests.
</pre>
<p>
   HTTP/1.1 includes the following request-header fields for enabling
   server-driven negotiation through description of user agent
   capabilities and user preferences: Accept (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.1">14.1</a>), Accept-
   Charset (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.2">14.2</a>), Accept-Encoding (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.3">14.3</a>), Accept-
   Language (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.4">14.4</a>), and User-Agent (section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.43">14.43</a>). However, an
   origin server is not limited to these dimensions and MAY vary the
   response based on any aspect of the request, including information
   outside the request-header fields or within extension header fields
   not defined by this specification.
</p>
<p>
   The Vary  header field can be used to express the parameters the
   server uses to select a representation that is subject to server-
   driven negotiation. See section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html#sec13.6">13.6</a> for use of the Vary header field
   by caches and section <a rel="xref" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.44">14.44</a> for use of the Vary header field by
   servers.
</p>
<h3><a id="sec12.2">12.2</a> Agent-driven Negotiation</h3>
<p>
   With agent-driven negotiation, selection of the best representation
   for a response is performed by the user agent after receiving an
   initial response from the origin server. Selection is based on a list
   of the available representations of the response included within the
   header fields or entity-body of the initial response, with each
   representation identified by its own URI. Selection from among the
   representations may be performed automatically (if the user agent is
   capable of doing so) or manually by the user selecting from a
   generated (possibly hypertext) menu.
</p>
<p>
   Agent-driven negotiation is advantageous when the response would vary
   over commonly-used dimensions (such as type, language, or encoding),
   when the origin server is unable to determine a user agent's
   capabilities from examining the request, and generally when public
   caches are used to distribute server load and reduce network usage.
</p>
<p>
   Agent-driven negotiation suffers from the disadvantage of needing a
   second request to obtain the best alternate representation. This
   second request is only efficient when caching is used. In addition,
   this specification does not define any mechanism for supporting
   automatic selection, though it also does not prevent any such
   mechanism from being developed as an extension and used within
   HTTP/1.1.
</p>
<p>
   HTTP/1.1 defines the 300 (Multiple Choices) and 406 (Not Acceptable)
   status codes for enabling agent-driven negotiation when the server is
   unwilling or unable to provide a varying response using server-driven
   negotiation.
</p>
<h3><a id="sec12.3">12.3</a> Transparent Negotiation</h3>
<p>
   Transparent negotiation is a combination of both server-driven and
   agent-driven negotiation. When a cache is supplied with a form of the
   list of available representations of the response (as in agent-driven
   negotiation) and the dimensions of variance are completely understood
   by the cache, then the cache becomes capable of performing server-
   driven negotiation on behalf of the origin server for subsequent
   requests on that resource.
</p>
<p>
   Transparent negotiation has the advantage of distributing the
   negotiation work that would otherwise be required of the origin
   server and also removing the second request delay of agent-driven
   negotiation when the cache is able to correctly guess the right
   response.
</p>
<p>
   This specification does not define any mechanism for transparent
   negotiation, though it also does not prevent any such mechanism from
   being developed as an extension that could be used within HTTP/1.1.
</p>
</body></html>
"""
Transfered bytes: 8439
From disk.
Executed in thread 'Hilo (8)'.

Date: Tue, 05 Oct 2010 05:44:06 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 05:44:06 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (9)'.

Date: Tue, 05 Oct 2010 22:15:42 GMT
IP: 127.0.0.1
URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 22:15:42 GMT
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 249
From disk.
Executed in thread 'Hilo (1)'.

Date: Tue, 05 Oct 2010 22:15:42 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 22:15:42 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (2)'.

Date: Tue, 05 Oct 2010 22:15:52 GMT
IP: 127.0.0.1
URL requested:sls
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 22:15:52 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (3)'.

Date: Tue, 05 Oct 2010 22:15:52 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 22:15:52 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
    <TITLE>Error 404</TITLE>
  <HEAD>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (4)'.

Date: Tue, 05 Oct 2010 22:17:20 GMT
IP: 127.0.0.1
URL requested:sls
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 22:17:20 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (5)'.

Date: Tue, 05 Oct 2010 22:17:20 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 22:17:20 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (6)'.

Date: Tue, 05 Oct 2010 22:17:30 GMT
IP: 127.0.0.1
URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 22:17:30 GMT
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 249
From cache.
Executed in thread 'Hilo (7)'.

Date: Tue, 05 Oct 2010 22:17:30 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 22:17:30 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (8)'.

Date: Tue, 05 Oct 2010 22:17:34 GMT
IP: 127.0.0.1
URL requested:ksjflsakfd%C3%B1jsak
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 22:17:34 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (9)'.

Date: Tue, 05 Oct 2010 22:17:34 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 22:17:34 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (10)'.

Date: Tue, 05 Oct 2010 22:17:42 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 22:17:42 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (11)'.

Date: Tue, 05 Oct 2010 22:17:45 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 22:17:45 GMT
Content-Type: text/html
Content-Length: 245

<HTML>
  <HEAD>
    <TITLE>Valid Authorizations.</TITLE>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
  </HEAD>
  <BODY><H1>Contratulations</H1>
      You have loggin, now you can see this page.
  </BODY>
</HTML>

"""
Transfered bytes: 382
From cache.
Executed in thread 'Hilo (12)'.

Date: Tue, 05 Oct 2010 22:17:45 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 22:17:45 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (13)'.

Date: Tue, 05 Oct 2010 22:36:32 GMT
IP: 127.0.0.1
URL requested:s.htm
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 22:36:32 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (14)'.

Date: Tue, 05 Oct 2010 22:36:32 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 22:36:32 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (15)'.

Date: Tue, 05 Oct 2010 22:36:41 GMT
IP: 127.0.0.1
URL requested:index.html
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 22:36:41 GMT
Content-Type: text/html
Content-Length: 112

<HTML>
  <HEAD>
    <TITLE>ejemplo hola mundo</TITLE>
  </HEAD>
  <BODY>
    <P>Hola Mundo</P>
  </BODY>
</HTML>
"""
Transfered bytes: 249
From cache.
Executed in thread 'Hilo (1)'.

Date: Tue, 05 Oct 2010 22:36:41 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 22:36:41 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (2)'.

Date: Tue, 05 Oct 2010 22:36:55 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 22:36:55 GMT
Content-Type: text/html
Content-Length: 245

<HTML>
  <HEAD>
    <TITLE>Valid Authorizations.</TITLE>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
  </HEAD>
  <BODY><H1>Contratulations</H1>
      You have loggin, now you can see this page.
  </BODY>
</HTML>

"""
Transfered bytes: 382
From cache.
Executed in thread 'Hilo (3)'.

Date: Tue, 05 Oct 2010 22:36:55 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 22:36:55 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (4)'.

Date: Tue, 05 Oct 2010 22:37:02 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 22:37:02 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (5)'.

Date: Tue, 05 Oct 2010 22:43:58 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 22:43:58 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (6)'.

Date: Tue, 05 Oct 2010 22:44:00 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 401 Authorization Required
WWW-Authenticate: Basic realm="Secure Area"
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 22:44:00 GMT
Content-Type: text/html
Content-Length: 119


<HTML>
  <HEAD>
    <TITLE>Error 401</TITLE>
  </HEAD>
  <BODY>
    <P>Error 401: Unauthorized.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 320
From "Error 401".
Executed in thread 'Hilo (7)'.

Date: Tue, 05 Oct 2010 22:44:03 GMT
IP: 127.0.0.1
URL requested:s.htmls
Sended code: """HTTP/1.1 200 OK
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 22:44:03 GMT
Content-Type: text/html
Content-Length: 245

<HTML>
  <HEAD>
    <TITLE>Valid Authorizations.</TITLE>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
  </HEAD>
  <BODY><H1>Contratulations</H1>
      You have loggin, now you can see this page.
  </BODY>
</HTML>

"""
Transfered bytes: 382
From cache.
Executed in thread 'Hilo (8)'.

Date: Tue, 05 Oct 2010 22:44:03 GMT
IP: 127.0.0.1
URL requested:favicon.ico
Sended code: """HTTP/1.1 404 Not Found
Server: byWS/0.2.1 (Unix) (FreeBSD/BSD)
Date: Tue, 05 Oct 2010 22:44:03 GMT
Content-Type: text/html
Content-Length: 120

<HTML>
  <HEAD>
    <TITLE>Error 404</TITLE>
  </HEAD>
  <BODY>
    <P>Error 404: Page not found.</P>
  </BODY>
</HTML>

"""
Transfered bytes: 264
From "Error 404".
Executed in thread 'Hilo (9)'.

